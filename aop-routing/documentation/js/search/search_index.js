var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AopBaseNavigation.html",[0,0.098,1,1.169]],["body/classes/AopBaseNavigation.html",[0,0.174,1,1.699,2,1.023,3,0.534,4,0.534,5,0.456,6,0.391,7,3.984,8,2.568,9,2.567,10,0.384,11,1.587,12,3.799,13,2.169,14,2.169,15,2.169,16,1.916,17,1.418,18,2.861,19,1.172,20,3.157,21,3.365,22,3.365,23,2.473,24,2.473,25,1.691,26,2.473,27,3.365,28,3.365,29,3.984,30,1.095,31,1.916,32,2.473,33,2.473,34,1.684,35,0.046,36,1.684,37,0.562,38,1.031,39,1.462,40,2.568,41,1.684,42,1.904,43,1.916,44,3.157,45,1.916,46,3.157,47,0.534,48,1.887,49,1.462,50,0.456,51,1.023,52,0.025,53,0.033,54,0.025]],["title/classes/AopConfig.html",[0,0.098,55,1.039]],["body/classes/AopConfig.html",[0,0.128,2,1.214,3,0.633,4,0.633,5,0.542,6,0.368,10,0.456,19,0.951,30,1.031,35,0.047,37,0.608,47,0.78,50,0.755,51,1.214,52,0.03,53,0.037,54,0.03,55,1.683,56,1.964,57,2.988,58,2.136,59,3.747,60,2.053,61,1.366,62,1.214,63,1.62,64,1.62,65,1.076,66,1.325,67,1.076,68,1.964,69,1.538,70,2.136,71,1.683,72,1.538,73,1.538,74,1.538,75,1.734,76,1.538,77,1.734,78,1.734,79,1.538,80,0.731]],["title/interfaces/AopNav.html",[63,0.923,69,1.169]],["body/interfaces/AopNav.html",[0,0.125,3,0.616,4,0.616,5,0.527,6,0.291,10,0.444,30,1.014,35,0.047,37,0.629,38,1.014,47,0.767,50,0.747,51,1.181,52,0.029,53,0.037,54,0.029,55,1.33,56,1.911,57,2.18,58,1.688,60,2.183,61,1.33,62,1.181,63,1.6,64,1.8,65,1.048,66,1.304,67,1.048,68,1.911,69,1.863,70,2.462,71,1.885,72,1.497,73,1.497,74,1.497,75,1.688,76,1.497,77,1.688,78,1.688,79,1.497,80,0.712,81,2.18]],["title/injectables/AopNavigationService.html",[82,1.493,83,1.702]],["body/injectables/AopNavigationService.html",[0,0.143,3,0.25,4,0.25,5,0.214,6,0.382,10,0.18,11,0.77,13,1.784,14,1.784,15,1.784,16,1.1,17,1.331,19,1.193,25,0.77,30,0.531,31,1.576,34,1.451,35,0.047,36,1.451,37,0.545,38,1.001,39,1.576,40,2.411,41,1.714,42,1.635,43,1.1,45,1.1,47,0.777,49,0.686,50,0.214,51,1.55,52,0.012,53,0.019,54,0.012,55,1.242,61,0.54,62,0.48,73,1.398,74,0.608,75,0.686,76,1.221,77,0.686,78,0.686,79,1.633,80,0.917,82,1.245,83,1.42,84,1.021,85,3.301,86,1.021,87,3.891,88,3.257,89,2.975,90,2.419,91,2.975,92,2.376,93,2.376,94,3.405,95,3.405,96,1.639,97,1.481,98,2.982,99,4.99,100,4.99,101,2.086,102,1.576,103,2.376,104,1.639,105,2.376,106,1.481,107,2.376,108,1.481,109,1.931,110,2.768,111,3.74,112,2.768,113,2.376,114,3.405,115,2.376,116,1.481,117,2.378,118,1.481,119,1.481,120,3.235,121,3.979,122,3.979,123,0.975,124,2.749,125,1.931,126,2.997,127,2.035,128,0.975,129,2.378,130,2.744,131,3.235,132,3.979,133,3.979,134,2.744,135,3.979,136,3.235,137,1.481,138,2.348,139,1.931,140,2.768,141,1.481,142,3.405,143,1.42,144,1.481,145,1.481,146,1.204,147,1.021,148,1.204,149,1.021,150,1.481,151,0.885,152,1.021,153,1.021,154,1.021,155,1.021,156,0.885,157,1.204,158,1.021,159,1.204,160,0.885,161,1.481,162,0.885,163,1.481,164,1.204,165,0.885,166,1.204,167,1.204,168,1.481,169,1.481,170,1.481,171,1.481,172,1.481,173,1.481,174,1.481,175,1.481,176,2.191,177,2.975,178,1.481,179,2.975,180,2.975,181,2.975,182,1.204,183,1.481,184,1.481,185,2.376,186,1.481,187,1.481,188,3.405,189,1.481,190,3.405,191,4.346,192,1.481,193,2.768,194,1.481,195,1.481,196,1.481,197,1.481,198,0.77,199,1.481,200,1.481,201,1.021,202,1.481,203,1.481,204,1.481,205,1.481,206,1.481,207,1.481,208,1.481,209,1.481,210,1.481]],["title/interfaces/AopNavigator.html",[63,0.923,72,1.169]],["body/interfaces/AopNavigator.html",[0,0.119,3,0.588,4,0.588,5,0.503,6,0.277,10,0.423,30,0.984,35,0.047,37,0.652,38,1.23,47,0.744,50,0.735,51,1.646,52,0.028,53,0.035,54,0.028,55,1.268,56,1.823,57,2.078,58,1.61,60,2.152,61,1.268,62,1.126,63,1.566,64,1.566,65,0.999,66,1.46,67,0.999,68,1.823,69,1.427,70,2.427,71,1.853,72,1.808,73,2.086,74,1.984,75,1.61,76,1.427,77,1.61,78,1.61,79,2.086,80,0.944,81,2.078]],["title/injectables/AopProxyNavigationService.html",[82,1.493,101,1.493]],["body/injectables/AopProxyNavigationService.html",[0,0.17,3,0.553,4,0.553,5,0.473,6,0.396,10,0.398,11,1.372,13,2.219,14,2.219,15,2.219,16,1.96,17,1.407,18,2.88,19,1.192,24,2.807,25,1.521,26,1.954,34,1.712,35,0.047,36,1.712,37,0.571,38,1.049,40,2.461,41,1.712,42,1.922,43,1.96,45,1.96,47,0.716,49,1.514,50,0.473,52,0.026,53,0.034,54,0.026,62,1.059,82,2.219,84,2.255,85,3.426,86,2.255,101,2.219,129,1.954,139,2.658,149,3.426,164,2.658,166,2.658,167,2.658,211,3.27,212,3.27,213,3.27,214,3.27,215,2.658,216,3.27,217,3.27,218,3.27,219,3.27,220,2.658,221,3.27,222,2.255,223,2.658,224,3.27,225,3.27,226,2.255]],["title/modules/AopRoutingModule.html",[227,1.965,228,1.702]],["body/modules/AopRoutingModule.html",[0,0.132,3,0.651,4,0.651,5,0.557,6,0.374,11,1.248,19,0.978,23,2.302,34,1.405,35,0.047,36,1.405,37,0.469,38,0.86,41,1.405,47,0.793,50,0.557,52,0.031,53,0.038,54,0.031,55,1.97,62,1.248,88,2.805,102,2.173,147,2.657,198,1.248,228,3.025,229,2.657,230,4.694,231,3.852,232,3.131,233,4.694,234,3.852,235,5.063,236,4.115,237,3.131,238,2.657,239,3.852]],["title/classes/BadProxy.html",[0,0.098,240,1.493]],["body/classes/BadProxy.html",[0,0.15,1,1.58,2,0.917,3,0.478,4,0.478,5,0.409,6,0.226,8,1.484,16,1.311,17,1.314,18,2.291,25,0.917,35,0.047,42,1.789,43,1.311,45,1.311,47,0.793,48,2.3,49,1.311,50,0.709,52,0.023,53,0.031,54,0.023,65,1.105,66,1.453,67,1.105,71,1.032,80,0.751,102,1.311,123,1.162,128,1.162,198,1.791,240,2.017,241,1.484,242,1.484,243,2.713,244,1.484,245,1.781,246,2.024,247,1.781,248,2.171,249,2.024,250,2.171,251,1.953,252,1.692,253,1.953,254,1.953,255,1.484,256,1.692,257,1.484,258,1.692,259,2.3,260,1.953,261,1.953,262,2.3,263,2.654,264,1.484,265,1.692,266,1.953,267,1.484,268,1.953,269,1.953,270,2.654,271,3.015,272,1.953,273,1.032,274,2.654,275,1.953,276,1.953,277,1.953,278,3.235,279,1.953,280,3.015,281,1.953,282,2.654,283,1.953,284,1.953,285,1.953,286,1.953,287,2.459,288,1.953,289,1.953,290,1.953,291,1.953,292,1.953,293,1.953]],["title/classes/GoodProxy.html",[0,0.098,255,1.493]],["body/classes/GoodProxy.html",[0,0.154,1,1.926,2,0.726,3,0.379,4,0.379,5,0.324,6,0.337,8,1.175,10,0.273,11,1.247,12,3.236,13,2.217,14,2.217,15,2.217,16,1.782,17,1.407,18,2.831,19,1.191,21,1.822,22,1.822,23,1.339,24,1.339,25,1.37,26,1.339,27,1.822,28,1.822,29,2.654,30,0.729,31,1.038,32,1.339,33,1.339,34,1.711,35,0.047,36,1.711,37,0.571,38,1.048,39,1.038,40,2.459,41,1.711,42,1.9,43,1.782,45,1.782,47,0.715,48,1.951,49,1.038,50,0.65,52,0.018,53,0.026,54,0.018,65,0.938,66,1.348,67,0.938,71,0.817,80,0.637,102,1.038,123,0.92,128,0.92,198,1.723,240,1.175,241,2.217,242,1.175,243,2.539,244,1.175,245,1.511,246,1.782,247,1.511,248,1.958,249,1.782,250,1.958,251,1.546,252,1.339,253,1.546,254,1.546,255,1.711,256,1.951,257,1.175,258,1.339,259,1.951,260,1.546,261,1.546,262,1.951,263,2.251,264,1.175,265,1.339,266,1.546,267,1.175,268,1.546,269,1.546,270,2.251,271,2.655,272,1.546,273,0.817,274,2.251,275,1.546,276,1.546,277,1.546,278,2.917,279,1.546,280,2.655,281,1.546,282,2.251,283,1.546,284,1.546,285,1.546,286,1.546,287,2.217,288,1.546,289,1.546,290,1.546,291,1.546,292,1.546,293,1.546,294,2.241,295,2.241,296,2.241,297,3.85,298,2.241,299,2.241,300,2.241]],["title/classes/MockDecoratorClass.html",[0,0.098,267,1.493]],["body/classes/MockDecoratorClass.html",[0,0.129,1,1.305,2,0.7,3,0.365,4,0.365,5,0.313,6,0.428,8,1.133,10,0.263,11,1.03,16,1.001,17,1.248,18,1.976,19,1.353,25,0.7,35,0.047,41,1.943,42,1.746,43,1.001,45,1.001,47,0.703,48,1.9,49,1.001,50,0.64,52,0.017,53,0.026,54,0.017,65,0.913,66,1.411,67,0.913,71,0.788,80,0.62,102,1.001,123,0.887,128,1.305,198,1.711,240,1.133,241,2.814,242,1.133,243,2.769,244,1.133,245,1.746,246,2.051,247,1.746,248,2.217,249,1.925,250,2.217,251,1.491,252,3.185,253,1.491,254,1.491,255,1.133,256,1.292,257,1.133,258,1.292,259,1.9,260,1.491,261,1.491,262,1.9,263,2.193,264,1.133,265,1.292,266,1.491,267,1.666,268,2.193,269,2.867,270,2.193,271,2.601,272,2.867,273,0.788,274,2.193,275,2.867,276,1.491,277,2.867,278,2.867,279,2.867,280,2.601,281,2.867,282,2.193,283,2.867,284,1.491,285,1.491,286,2.867,287,2.179,288,2.867,289,2.867,290,2.867,291,2.867,292,2.867,293,2.867,301,2.162,302,2.162,303,2.162,304,2.162,305,2.162,306,2.162,307,2.162,308,2.162,309,2.162,310,2.162,311,2.162,312,2.162,313,2.162,314,2.162,315,2.162]],["title/classes/NavAux.html",[0,0.098,17,0.723]],["body/classes/NavAux.html",[0,0.158,2,1.019,3,0.532,4,0.532,5,0.455,6,0.416,10,0.383,11,1.337,17,1.048,19,1.29,25,1.585,30,1.093,34,1.147,35,0.047,36,1.147,37,0.618,38,1.218,39,1.456,47,0.532,50,0.455,51,1.646,52,0.025,53,0.033,54,0.025,60,2.086,61,1.147,66,1.405,70,2.352,71,1.784,73,2.009,74,2.009,75,1.456,76,1.291,77,1.456,78,1.456,79,2.086,80,0.955,96,2.847,104,3.375,176,2.926,316,4.24,317,2.557,318,4.129,319,2.847,320,4.129,321,3.356,322,4.129,323,4.129,324,3.145,325,3.145,326,3.145,327,3.145,328,3.145,329,3.145]],["title/classes/RouteHelper.html",[0,0.098,160,1.702]],["body/classes/RouteHelper.html",[0,0.047,2,0.445,3,0.232,4,0.232,5,0.199,6,0.367,10,0.167,11,0.725,19,1.141,30,0.5,31,1.877,34,1.593,35,0.047,36,1.899,37,0.61,38,0.976,39,1.956,41,1.676,42,1.739,47,0.65,50,0.199,51,1.676,52,0.011,53,0.018,54,0.011,61,0.501,62,0.445,64,1.313,65,1.624,66,1.487,67,1.487,87,2.3,88,3.216,98,3.404,102,0.636,117,3.048,127,3.093,138,0.948,147,0.948,151,0.821,156,0.821,157,1.117,158,0.948,159,1.117,160,1.337,165,0.821,176,2.215,193,1.117,198,0.725,201,2.652,226,3.014,264,2.651,273,1.189,287,0.72,330,3.737,331,0.948,332,2.829,333,2.237,334,2.237,335,2.237,336,2.237,337,2.237,338,2.237,339,2.237,340,2.237,341,2.237,342,2.3,343,1.375,344,2.237,345,1.375,346,1.819,347,2.237,348,2.652,349,0.948,350,0.72,351,3.588,352,3.296,353,4.404,354,2.237,355,3.935,356,1.375,357,1.819,358,3.552,359,1.819,360,2.237,361,1.375,362,2.237,363,2.237,364,2.237,365,1.375,366,2.237,367,2.237,368,1.375,369,2.237,370,1.375,371,2.237,372,1.375,373,2.237,374,1.819,375,1.819,376,1.819,377,1.375,378,1.375,379,1.375,380,1.375,381,2.237,382,1.375,383,2.237,384,1.819,385,2.237,386,2.3,387,1.375,388,1.375,389,1.375,390,1.375,391,2.237,392,3.846,393,3.26,394,1.375,395,2.829,396,2.829,397,1.375,398,1.375,399,1.375,400,1.375,401,1.375,402,1.375,403,1.375,404,2.237,405,2.65,406,1.375,407,1.375,408,3.588,409,2.237,410,1.375,411,2.237,412,1.375,413,1.375,414,1.375,415,1.375,416,1.375,417,1.375,418,1.117,419,3.26,420,1.375,421,1.375,422,1.375,423,1.375,424,1.375,425,1.375]],["title/interfaces/RouteTransform.html",[63,0.923,64,0.923]],["body/interfaces/RouteTransform.html",[0,0.124,3,0.612,4,0.612,5,0.524,6,0.289,10,0.441,30,1.01,35,0.047,37,0.668,38,1.152,47,0.764,50,0.746,51,1.173,52,0.029,53,0.036,54,0.029,55,1.321,56,1.899,57,2.165,58,1.677,60,2.022,61,1.321,62,1.173,63,1.595,64,1.671,65,1.481,66,1.481,67,1.481,68,2.703,69,1.487,70,2.092,71,1.648,72,1.487,73,1.487,74,1.487,75,1.677,76,1.487,77,1.677,78,1.677,79,1.487,80,0.707,81,2.165]],["title/classes/Transient.html",[0,0.098,162,1.702]],["body/classes/Transient.html",[0,0.144,2,1.362,3,0.711,4,0.711,5,0.608,6,0.395,10,0.512,19,1.068,30,1.105,35,0.045,37,0.512,50,0.608,52,0.034,53,0.04,54,0.034,58,2.29,88,3.141,162,2.957,176,2.205,426,3.42,427,5.257,428,4.207]],["title/coverage.html",[429,3.142]],["body/coverage.html",[0,0.178,1,1.096,5,0.386,6,0.461,7,2.171,8,1.4,9,2.171,17,0.678,35,0.047,37,0.325,52,0.022,53,0.03,54,0.022,55,0.974,56,2.399,63,1.373,64,0.865,69,1.096,72,1.096,80,1.092,82,1.938,83,1.596,85,2.55,86,2.55,101,1.4,149,1.842,151,1.596,152,1.842,153,1.842,154,1.842,155,1.842,156,1.596,160,1.596,162,1.596,240,1.4,241,2.519,242,2.519,245,1.236,246,1.236,247,1.236,248,1.236,249,1.236,250,1.236,255,1.4,257,1.4,267,1.4,273,0.974,316,2.171,317,2.171,330,2.171,331,3.156,348,1.842,405,4.608,426,2.171,429,2.171,430,2.671,431,2.671,432,2.671,433,4.041,434,4.041,435,4.971,436,4.971,437,5.514,438,2.671,439,2.671,440,3.697,441,2.671,442,2.671,443,3.697,444,2.671,445,2.671,446,2.671,447,2.671,448,3.447,449,2.171,450,2.171,451,2.171,452,2.671,453,2.671,454,4.041,455,2.671,456,2.671,457,2.671,458,2.171,459,3.005,460,3.697,461,2.171,462,2.171,463,2.671]],["title/dependencies.html",[464,1.943,465,2.359]],["body/dependencies.html",[35,0.047,52,0.032,53,0.039,54,0.032,61,1.463,62,1.299,146,3.261,165,2.397,244,2.103,465,2.767,466,4.012,467,5.655,468,4.012,469,4.012,470,4.81,471,3.91,472,4.012,473,4.012,474,4.012,475,4.012,476,4.012,477,4.012,478,4.012,479,4.012,480,4.012,481,4.012,482,4.012,483,4.012,484,4.012]],["title/miscellaneous/enumerations.html",[485,1.107,486,2.78]],["body/miscellaneous/enumerations.html",[6,0.297,10,0.453,17,0.945,35,0.046,52,0.03,53,0.037,54,0.03,64,1.205,65,1.069,67,1.069,80,0.726,117,2.746,123,1.528,124,2.224,126,2.566,127,2.979,128,1.528,129,2.224,134,3.169,143,2.224,158,3.169,198,1.205,243,2.408,273,1.357,350,2.966,376,3.025,485,1.723,486,3.025,487,3.722,488,3.722,489,3.722,490,3.025,491,3.722,492,3.722,493,4.053,494,3.722,495,3.722,496,3.722,497,3.722,498,3.722,499,3.025,500,3.722,501,4.596,502,2.566,503,3.722,504,3.722,505,3.722,506,3.722,507,3.722,508,3.025,509,3.722,510,3.722,511,3.722,512,2.566,513,4.596]],["title/miscellaneous/functions.html",[33,2.044,485,1.107]],["body/miscellaneous/functions.html",[0,0.17,6,0.351,10,0.298,17,1.347,25,0.793,30,0.904,31,2.039,32,2.079,33,1.463,34,1.984,35,0.045,36,1.953,37,0.492,38,1.197,39,2.154,40,1.283,41,1.885,52,0.033,53,0.028,54,0.02,58,2.039,60,1.985,80,0.478,90,1.99,98,2.418,104,3.209,109,3.289,123,1.428,124,2.418,125,3.289,126,3.566,128,2.123,130,1.688,143,1.463,151,2.079,152,2.399,153,2.399,154,2.399,155,2.399,156,2.079,182,1.99,198,1.31,222,1.688,241,1.283,242,2.12,245,1.873,246,1.873,247,1.61,248,1.873,249,1.61,250,1.873,257,2.12,258,1.463,259,1.463,273,1.268,319,2.79,331,3.038,346,1.99,350,2.439,358,1.99,433,1.99,434,4.043,448,1.99,449,3.289,450,2.828,451,3.289,454,1.99,458,2.828,485,1.133,493,2.828,502,1.688,512,3.038,514,4.835,515,4.046,516,3.478,517,4.835,518,2.448,519,2.448,520,2.448,521,2.448,522,2.448,523,2.448,524,2.448,525,2.828,526,3.581,527,2.448,528,2.448,529,2.448,530,3.478,531,2.448,532,2.448,533,2.448,534,4.046,535,4.046,536,4.046,537,1.99,538,2.448,539,3.478,540,3.478,541,2.448,542,2.448,543,1.99,544,2.448,545,3.289]],["title/index.html",[10,0.291,546,2.391,547,2.391]],["body/index.html",[0,0.129,1,1.204,11,0.629,12,1.729,13,1.018,14,1.018,15,1.018,19,0.294,23,0.692,24,2.246,25,1.622,26,2.968,30,0.259,31,1.897,32,2.763,35,0.046,37,0.141,38,0.259,42,0.708,47,0.328,50,0.362,51,0.375,52,0.009,53,0.016,54,0.009,60,1.029,63,0.629,64,1.656,65,1.459,66,0.939,67,1.249,68,1.713,69,1.029,70,0.536,72,1.738,73,1.452,74,0.475,76,0.475,79,0.797,80,0.887,83,1.16,96,0.799,98,1.754,101,1.018,110,0.941,111,3.817,112,3.441,117,2.806,120,2.038,123,0.797,124,2.661,127,1.953,128,1.452,129,1.16,130,0.799,131,0.941,134,2.719,136,1.578,138,1.729,140,2.038,143,2.114,148,2.038,165,0.692,176,2.579,198,1.646,201,3,215,1.578,220,3.055,222,0.799,223,1.578,226,1.729,227,2.024,228,1.754,232,0.941,236,0.941,237,2.038,238,1.339,243,2.381,244,1.538,245,1.16,246,1.358,247,2.203,248,2.061,249,1.513,250,1.637,252,2.246,256,1.498,262,0.692,264,1.97,265,1.16,273,0.914,319,1.339,321,1.578,342,1.578,348,2.592,349,1.729,350,2.148,352,0.941,353,3.055,355,1.578,357,2.876,359,2.038,374,2.038,375,1.578,384,0.941,386,1.578,418,0.941,464,0.941,471,2.385,490,0.941,499,3.758,502,2.827,508,1.578,512,2.024,525,1.578,526,0.941,537,2.038,543,2.038,545,2.876,548,1.158,549,1.158,550,4.543,551,3.758,552,2.934,553,1.158,554,1.158,555,1.158,556,1.942,557,3.758,558,1.158,559,2.507,560,3.269,561,4.35,562,1.158,563,1.158,564,1.942,565,2.507,566,1.158,567,1.158,568,1.158,569,1.158,570,1.158,571,1.158,572,0.941,573,1.942,574,1.158,575,1.158,576,2.934,577,2.934,578,1.158,579,1.158,580,1.158,581,1.158,582,1.158,583,1.158,584,1.158,585,3.758,586,2.934,587,4.543,588,1.158,589,4.543,590,4.35,591,4.35,592,4.873,593,1.942,594,1.942,595,1.158,596,1.158,597,3.537,598,2.934,599,1.942,600,2.507,601,3.758,602,2.507,603,2.934,604,3.441,605,2.934,606,2.934,607,1.158,608,1.942,609,1.942,610,2.507,611,1.942,612,4.35,613,1.942,614,2.385,615,2.507,616,1.158,617,1.158,618,1.158,619,1.158,620,1.158,621,1.158,622,1.158,623,1.158,624,1.158,625,1.158,626,1.158,627,1.942,628,1.158,629,1.158,630,1.158,631,2.507,632,1.158,633,1.158,634,1.158,635,1.158,636,1.158,637,1.158,638,1.158,639,1.158,640,1.158,641,1.158,642,1.942,643,1.158,644,1.158,645,1.158,646,1.158,647,1.158,648,2.507,649,2.934,650,1.158,651,1.942,652,1.158,653,1.158,654,2.507,655,1.158,656,1.158,657,1.158,658,1.158,659,1.158,660,1.158,661,1.158,662,1.158,663,1.158,664,1.158,665,1.158,666,1.158,667,1.158,668,1.158,669,1.942,670,2.507,671,2.507,672,2.507,673,3.537,674,2.507,675,1.158,676,1.158,677,1.158,678,2.507,679,1.158,680,1.158,681,1.158,682,1.942,683,1.942,684,1.942,685,1.158,686,1.942,687,1.158,688,1.942,689,1.158,690,1.158,691,1.158,692,1.158,693,1.158,694,1.158]],["title/modules.html",[229,2.665]],["body/modules.html",[35,0.041,52,0.036,53,0.041,54,0.036,228,2.678,229,3.091,572,3.643,695,4.482,696,4.482]],["title/overview.html",[697,3.142]],["body/overview.html",[2,1.395,35,0.04,52,0.035,53,0.04,54,0.035,81,2.573,84,2.969,227,3.459,238,2.969,287,2.257,465,2.969,604,3.5,697,3.5,698,4.306,699,4.306,700,4.306,701,4.306,702,5.016,703,4.306,704,4.306,705,4.306,706,4.306]],["title/miscellaneous/variables.html",[485,1.107,707,2.78]],["body/miscellaneous/variables.html",[6,0.344,10,0.525,35,0.044,37,0.525,52,0.035,53,0.04,54,0.035,349,2.977,350,2.262,459,3.509,461,4.083,462,4.083,485,1.998,614,3.509,707,3.509,708,5.023,709,4.317,710,4.317]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":405,"title":{},"body":{"classes/RouteHelper.html":{},"coverage.html":{}}}],["0.8.26",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":287,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"overview.html":{}}}],["1.9.0",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":261,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["14",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":604,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":706,"title":{},"body":{"overview.html":{}}}],["3).pipe",{"_index":605,"title":{},"body":{"index.html":{}}}],["4.13.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":705,"title":{},"body":{"overview.html":{}}}],["8.1",{"_index":568,"title":{},"body":{"index.html":{}}}],["8.1.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["abc",{"_index":266,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["above",{"_index":653,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":12,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["action",{"_index":121,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["add",{"_index":357,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["add/remove",{"_index":562,"title":{},"body":{"index.html":{}}}],["added",{"_index":386,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["adding",{"_index":374,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["addnewroutepath",{"_index":333,"title":{},"body":{"classes/RouteHelper.html":{}}}],["addnewroutepath(router",{"_index":344,"title":{},"body":{"classes/RouteHelper.html":{}}}],["addorremovecanactivateguard",{"_index":334,"title":{},"body":{"classes/RouteHelper.html":{}}}],["addorremovecanactivateguard(router",{"_index":354,"title":{},"body":{"classes/RouteHelper.html":{}}}],["adds",{"_index":347,"title":{},"body":{"classes/RouteHelper.html":{}}}],["allow",{"_index":215,"title":{},"body":{"injectables/AopProxyNavigationService.html":{},"index.html":{}}}],["allowing",{"_index":596,"title":{},"body":{"index.html":{}}}],["along",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["alters",{"_index":373,"title":{},"body":{"classes/RouteHelper.html":{}}}],["angular",{"_index":220,"title":{},"body":{"injectables/AopProxyNavigationService.html":{},"index.html":{}}}],["angular/animations",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":146,"title":{},"body":{"injectables/AopNavigationService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":62,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":61,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"dependencies.html":{}}}],["aop",{"_index":148,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["aopbasenavigation",{"_index":1,"title":{"classes/AopBaseNavigation.html":{}},"body":{"classes/AopBaseNavigation.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"index.html":{}}}],["aopbasenavigation:10",{"_index":298,"title":{},"body":{"classes/GoodProxy.html":{}}}],["aopbasenavigation:11",{"_index":299,"title":{},"body":{"classes/GoodProxy.html":{}}}],["aopbasenavigation:12",{"_index":300,"title":{},"body":{"classes/GoodProxy.html":{}}}],["aopconfig",{"_index":55,"title":{"classes/AopConfig.html":{}},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"modules/AopRoutingModule.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{}}}],["aopnav",{"_index":69,"title":{"interfaces/AopNav.html":{}},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{},"index.html":{}}}],["aopnavigationservice",{"_index":83,"title":{"injectables/AopNavigationService.html":{}},"body":{"injectables/AopNavigationService.html":{},"coverage.html":{},"index.html":{}}}],["aopnavigationservice.locationref",{"_index":172,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["aopnavigationservice.proxynavref",{"_index":174,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["aopnavigationservice.routerref",{"_index":170,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["aopnavigator",{"_index":72,"title":{"interfaces/AopNavigator.html":{}},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{},"index.html":{}}}],["aopproxynavigationservice",{"_index":101,"title":{"injectables/AopProxyNavigationService.html":{}},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"coverage.html":{},"index.html":{}}}],["aoprouting",{"_index":648,"title":{},"body":{"index.html":{}}}],["aoproutingmodule",{"_index":228,"title":{"modules/AopRoutingModule.html":{}},"body":{"modules/AopRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["aoproutingmodule.forroot({expirementnav",{"_index":663,"title":{},"body":{"index.html":{}}}],["app",{"_index":584,"title":{},"body":{"index.html":{}}}],["application",{"_index":659,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":579,"title":{},"body":{"index.html":{}}}],["args",{"_index":18,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["argument",{"_index":113,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["arguments",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":226,"title":{},"body":{"injectables/AopProxyNavigationService.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["associated",{"_index":688,"title":{},"body":{"index.html":{}}}],["async",{"_index":490,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["asynchronous",{"_index":616,"title":{},"body":{"index.html":{}}}],["attached",{"_index":351,"title":{},"body":{"classes/RouteHelper.html":{}}}],["attribute",{"_index":224,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["automatically",{"_index":585,"title":{},"body":{"index.html":{}}}],["aux",{"_index":49,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["aux.ts",{"_index":317,"title":{},"body":{"classes/NavAux.html":{},"coverage.html":{}}}],["aux.ts:11",{"_index":329,"title":{},"body":{"classes/NavAux.html":{}}}],["aux.ts:12",{"_index":328,"title":{},"body":{"classes/NavAux.html":{}}}],["aux.ts:6",{"_index":325,"title":{},"body":{"classes/NavAux.html":{}}}],["aux.ts:8",{"_index":326,"title":{},"body":{"classes/NavAux.html":{}}}],["aux.ts:9",{"_index":327,"title":{},"body":{"classes/NavAux.html":{}}}],["available",{"_index":572,"title":{},"body":{"index.html":{},"modules.html":{}}}],["aysnchronous",{"_index":600,"title":{},"body":{"index.html":{}}}],["back",{"_index":138,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["backwards",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["badproxy",{"_index":240,"title":{"classes/BadProxy.html":{}},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{}}}],["base",{"_index":8,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{}}}],["basenavigation",{"_index":219,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["below",{"_index":589,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":700,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":696,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":471,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["call",{"_index":122,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["calls",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["canactivate",{"_index":264,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["canactivateguards",{"_index":68,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["capabilities",{"_index":636,"title":{},"body":{"index.html":{}}}],["capability",{"_index":549,"title":{},"body":{"index.html":{}}}],["catch",{"_index":190,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["cautionto",{"_index":660,"title":{},"body":{"index.html":{}}}],["change",{"_index":375,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["changed",{"_index":677,"title":{},"body":{"index.html":{}}}],["changeroutecomponent",{"_index":335,"title":{},"body":{"classes/RouteHelper.html":{}}}],["changeroutecomponent(router",{"_index":360,"title":{},"body":{"classes/RouteHelper.html":{}}}],["changes",{"_index":689,"title":{},"body":{"index.html":{}}}],["changing",{"_index":675,"title":{},"body":{"index.html":{}}}],["check",{"_index":417,"title":{},"body":{"classes/RouteHelper.html":{}}}],["class",{"_index":0,"title":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"classes/Transient.html":{}},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["class@ngmodule",{"_index":652,"title":{},"body":{"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"classes/Transient.html":{},"overview.html":{}}}],["clonedactivatedguards",{"_index":409,"title":{},"body":{"classes/RouteHelper.html":{}}}],["clonedcanactivateguards",{"_index":414,"title":{},"body":{"classes/RouteHelper.html":{}}}],["clonedeep",{"_index":387,"title":{},"body":{"classes/RouteHelper.html":{}}}],["clonedeep(router.config",{"_index":390,"title":{},"body":{"classes/RouteHelper.html":{}}}],["clonedeep(this.getroutepathobj(router",{"_index":415,"title":{},"body":{"classes/RouteHelper.html":{}}}],["comp",{"_index":263,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["complete",{"_index":619,"title":{},"body":{"index.html":{}}}],["completion",{"_index":694,"title":{},"body":{"index.html":{}}}],["component",{"_index":67,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["config",{"_index":102,"title":{},"body":{"injectables/AopNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{}}}],["config.expirementnav",{"_index":169,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["configuration",{"_index":380,"title":{},"body":{"classes/RouteHelper.html":{}}}],["const",{"_index":201,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/NavAux.html":{},"index.html":{}}}],["constructor(destinationpage",{"_index":324,"title":{},"body":{"classes/NavAux.html":{}}}],["constructor(private",{"_index":580,"title":{},"body":{"index.html":{}}}],["constructor(router",{"_index":97,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["contains",{"_index":637,"title":{},"body":{"index.html":{}}}],["context",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":429,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":512,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["created",{"_index":359,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["createerrorobj",{"_index":151,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorobj(errormsg",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createnavobj",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createnavobj(page",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":346,"title":{},"body":{"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["custom",{"_index":24,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["data.ts",{"_index":242,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.ts:100",{"_index":315,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:14",{"_index":294,"title":{},"body":{"classes/GoodProxy.html":{}}}],["data.ts:15",{"_index":295,"title":{},"body":{"classes/GoodProxy.html":{}}}],["data.ts:16",{"_index":296,"title":{},"body":{"classes/GoodProxy.html":{}}}],["data.ts:36",{"_index":305,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:41",{"_index":307,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:46",{"_index":306,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:51",{"_index":308,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:56",{"_index":304,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:61",{"_index":302,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:66",{"_index":303,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:71",{"_index":301,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:76",{"_index":311,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:81",{"_index":313,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:86",{"_index":312,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:91",{"_index":314,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["data.ts:96",{"_index":309,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["declarations",{"_index":699,"title":{},"body":{"overview.html":{}}}],["decorator",{"_index":32,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["decorators",{"_index":252,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"index.html":{}}}],["decorators.ts",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["default",{"_index":349,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"classes/Transient.html":{},"index.html":{}}}],["demonstrate",{"_index":664,"title":{},"body":{"index.html":{}}}],["deocrator",{"_index":674,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":465,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["description",{"_index":39,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["destination",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["destinationpage",{"_index":73,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["disablecanactivateguards",{"_index":336,"title":{},"body":{"classes/RouteHelper.html":{}}}],["disablecanactivateguards(router",{"_index":364,"title":{},"body":{"classes/RouteHelper.html":{}}}],["disabled",{"_index":385,"title":{},"body":{"classes/RouteHelper.html":{}}}],["documentation",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":595,"title":{},"body":{"index.html":{}}}],["dummy",{"_index":214,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["during",{"_index":658,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":165,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"dependencies.html":{},"index.html":{}}}],["dynamically",{"_index":560,"title":{},"body":{"index.html":{}}}],["e",{"_index":191,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["ease",{"_index":553,"title":{},"body":{"index.html":{}}}],["element",{"_index":419,"title":{},"body":{"classes/RouteHelper.html":{}}}],["element.path",{"_index":413,"title":{},"body":{"classes/RouteHelper.html":{}}}],["empty",{"_index":384,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["enable",{"_index":661,"title":{},"body":{"index.html":{}}}],["encapsulate",{"_index":318,"title":{},"body":{"classes/NavAux.html":{}}}],["encapsulates",{"_index":29,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{}}}],["encountered",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["end",{"_index":586,"title":{},"body":{"index.html":{}}}],["enhance",{"_index":639,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":486,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":626,"title":{},"body":{"index.html":{}}}],["error",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["errormsg",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":590,"title":{},"body":{"index.html":{}}}],["examples",{"_index":665,"title":{},"body":{"index.html":{}}}],["execute",{"_index":322,"title":{},"body":{"classes/NavAux.html":{}}}],["executed",{"_index":130,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["executeimperativenavigation",{"_index":92,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["executeimperativenavigation(navobj",{"_index":105,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["executepreprocesslogic",{"_index":93,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["executepreprocesslogic(preprocessfunc",{"_index":107,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["executes",{"_index":109,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/functions.html":{}}}],["executing",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":140,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["exist",{"_index":418,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["existing",{"_index":358,"title":{},"body":{"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["experiemental",{"_index":657,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":508,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["experimental_feature_component_missing",{"_index":511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["experimental_feature_route_transform",{"_index":507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["experimentalnav",{"_index":662,"title":{},"body":{"index.html":{}}}],["expiremental_feature_route_transform",{"_index":513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expirementnav",{"_index":57,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{}}}],["export",{"_index":50,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"index.html":{}}}],["exports",{"_index":701,"title":{},"body":{"overview.html":{}}}],["exsting",{"_index":533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":256,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"index.html":{}}}],["extra",{"_index":319,"title":{},"body":{"classes/NavAux.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["failed",{"_index":501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["features",{"_index":557,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{}}}],["flag",{"_index":509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following",{"_index":638,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":232,"title":{},"body":{"modules/AopRoutingModule.html":{},"index.html":{}}}],["forroot(config",{"_index":233,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["forward",{"_index":632,"title":{},"body":{"index.html":{}}}],["forwards",{"_index":629,"title":{},"body":{"index.html":{}}}],["function",{"_index":80,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["functionalities",{"_index":640,"title":{},"body":{"index.html":{}}}],["functions",{"_index":33,"title":{"miscellaneous/functions.html":{}},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{},"miscellaneous/functions.html":{}}}],["getlocationobj",{"_index":94,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["getroutepathobj",{"_index":337,"title":{},"body":{"classes/RouteHelper.html":{}}}],["getroutepathobj(router",{"_index":367,"title":{},"body":{"classes/RouteHelper.html":{}}}],["getrouterobj",{"_index":95,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["getting",{"_index":546,"title":{"index.html":{}},"body":{}}],["go",{"_index":142,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["goodproxy",{"_index":255,"title":{"classes/GoodProxy.html":{}},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{}}}],["gotonextpage",{"_index":13,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["gotonextpage(navobj",{"_index":16,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["gotopreviouspage",{"_index":14,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["gotopreviouspage(navobj",{"_index":43,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["gotostate",{"_index":15,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["gotostate(navobj",{"_index":45,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["graph",{"_index":695,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":355,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["guard(s",{"_index":678,"title":{},"body":{"index.html":{}}}],["guard.length",{"_index":404,"title":{},"body":{"classes/RouteHelper.html":{}}}],["guard1",{"_index":265,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"index.html":{}}}],["guard2",{"_index":682,"title":{},"body":{"index.html":{}}}],["guardindex",{"_index":422,"title":{},"body":{"classes/RouteHelper.html":{}}}],["guards",{"_index":353,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["guards[element",{"_index":421,"title":{},"body":{"classes/RouteHelper.html":{}}}],["hello",{"_index":270,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["helper",{"_index":161,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["helper.ts",{"_index":331,"title":{},"body":{"classes/RouteHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["helper.ts:10",{"_index":343,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:107",{"_index":368,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:111",{"_index":370,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:140",{"_index":378,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:19",{"_index":372,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:41",{"_index":345,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:57",{"_index":361,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:68",{"_index":382,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:81",{"_index":365,"title":{},"body":{"classes/RouteHelper.html":{}}}],["helper.ts:92",{"_index":356,"title":{},"body":{"classes/RouteHelper.html":{}}}],["higheraop",{"_index":569,"title":{},"body":{"index.html":{}}}],["history",{"_index":143,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["history.go(navobj.destinationpage",{"_index":196,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["identifier",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["imperative",{"_index":551,"title":{},"body":{"index.html":{}}}],["implemenation",{"_index":216,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["implement",{"_index":650,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":135,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["import",{"_index":47,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["imports",{"_index":237,"title":{},"body":{"modules/AopRoutingModule.html":{},"index.html":{}}}],["include",{"_index":558,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{}}}],["inherited",{"_index":297,"title":{},"body":{"classes/GoodProxy.html":{}}}],["inheriting",{"_index":218,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["inject",{"_index":578,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{}},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"overview.html":{}}}],["injector",{"_index":221,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["inside",{"_index":618,"title":{},"body":{"index.html":{}}}],["install",{"_index":574,"title":{},"body":{"index.html":{}}}],["installation",{"_index":563,"title":{},"body":{"index.html":{}}}],["instance",{"_index":126,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["instead",{"_index":136,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["integer",{"_index":627,"title":{},"body":{"index.html":{}}}],["interface",{"_index":63,"title":{"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{}},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":81,"title":{},"body":{"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"overview.html":{}}}],["isaopnavobj",{"_index":152,"title":{},"body":{"injectables/AopNavigationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isaopnavobj(navobj",{"_index":182,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/functions.html":{}}}],["iscanactivateguardexist",{"_index":338,"title":{},"body":{"classes/RouteHelper.html":{}}}],["iscanactivateguardexist(router",{"_index":369,"title":{},"body":{"classes/RouteHelper.html":{}}}],["isproxynavigationprovided",{"_index":153,"title":{},"body":{"injectables/AopNavigationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isproxynavigationprovided(proxynavref",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isproxynavigationprovided(this.proxynavref",{"_index":177,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["istypenumber",{"_index":154,"title":{},"body":{"injectables/AopNavigationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istypenumber(navobj.destinationpage",{"_index":195,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["istypenumber(value",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["istypestring",{"_index":155,"title":{},"body":{"injectables/AopNavigationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istypestring(destinationpage",{"_index":204,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["istypestring(value",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":685,"title":{},"body":{"index.html":{}}}],["jasmine.createspy('navigate",{"_index":260,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["js",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":425,"title":{},"body":{"classes/RouteHelper.html":{}}}],["legend",{"_index":698,"title":{},"body":{"overview.html":{}}}],["level/root",{"_index":577,"title":{},"body":{"index.html":{}}}],["lib/decorators/nav",{"_index":251,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["lib/model/abstract/aop",{"_index":253,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["lib/model/nav",{"_index":254,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["library",{"_index":565,"title":{},"body":{"index.html":{}}}],["likewise",{"_index":628,"title":{},"body":{"index.html":{}}}],["line:ban",{"_index":77,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{}}}],["list",{"_index":352,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["load",{"_index":504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["location",{"_index":99,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["location_back",{"_index":500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["locationref",{"_index":89,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["lodash.clonedeep",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["lodash/clonedeep",{"_index":388,"title":{},"body":{"classes/RouteHelper.html":{}}}],["logerror",{"_index":156,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["logerror(createerrorobj(naverror.experimental_feature_component_missing",{"_index":401,"title":{},"body":{"classes/RouteHelper.html":{}}}],["logerror(createerrorobj(naverror.location_back",{"_index":192,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["logerror(createerrorobj(naverror.preprocress_func",{"_index":209,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["logerror(createerrorobj(naverror.routing",{"_index":207,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["logerror(createerrorobj(naverror.state_history",{"_index":197,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["logerror(error",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logic",{"_index":26,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["lot",{"_index":582,"title":{},"body":{"index.html":{}}}],["made",{"_index":690,"title":{},"body":{"index.html":{}}}],["make",{"_index":602,"title":{},"body":{"index.html":{}}}],["matching",{"_index":53,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":655,"title":{},"body":{"index.html":{}}}],["method",{"_index":124,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["method's",{"_index":588,"title":{},"body":{"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["miscellaneous",{"_index":485,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mockbackasyncerror",{"_index":286,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockbackmethod",{"_index":281,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockbackmethodasync",{"_index":283,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockdecoratorclass",{"_index":267,"title":{"classes/MockDecoratorClass.html":{}},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{}}}],["mockfunction",{"_index":257,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mocknextasyncerror",{"_index":279,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mocknextmethod",{"_index":269,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mocknextmethodasync",{"_index":275,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mocknextobjmethod",{"_index":272,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mocknextobjmethodasync",{"_index":277,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockpartialrouter",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mockpartialrouter(url",{"_index":258,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"miscellaneous/functions.html":{}}}],["mockroutetostateasyncerror",{"_index":292,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockroutetostatemethod",{"_index":288,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockroutetostatemethodasync",{"_index":290,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockroutetostatemethodobj",{"_index":289,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["mockroutetostatemethoobjasync",{"_index":291,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["model/enum",{"_index":159,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{}}}],["model/models",{"_index":147,"title":{},"body":{"injectables/AopNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/RouteHelper.html":{}}}],["model/nav",{"_index":164,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{}}}],["modifies",{"_index":362,"title":{},"body":{"classes/RouteHelper.html":{}}}],["modify",{"_index":610,"title":{},"body":{"index.html":{}}}],["modifyroutetable",{"_index":339,"title":{},"body":{"classes/RouteHelper.html":{}}}],["modifyroutetable(router",{"_index":371,"title":{},"body":{"classes/RouteHelper.html":{}}}],["module",{"_index":227,"title":{"modules/AopRoutingModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":229,"title":{"modules.html":{}},"body":{"modules/AopRoutingModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":235,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["naivage",{"_index":625,"title":{},"body":{"index.html":{}}}],["name",{"_index":36,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["name(s",{"_index":681,"title":{},"body":{"index.html":{}}}],["nav",{"_index":48,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["navaux",{"_index":17,"title":{"classes/NavAux.html":{}},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["navaux('aop",{"_index":274,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["navaux(undefined",{"_index":284,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["naverror",{"_index":158,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{}}}],["naverror.experimental_feature_component_missing",{"_index":402,"title":{},"body":{"classes/RouteHelper.html":{}}}],["navgigate",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navigate",{"_index":123,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigated",{"_index":669,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":25,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigation.service",{"_index":150,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts",{"_index":86,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"coverage.html":{}}}],["navigation.service.ts:116",{"_index":118,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:123",{"_index":116,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:127",{"_index":106,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:14",{"_index":211,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["navigation.service.ts:146",{"_index":108,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:15",{"_index":212,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["navigation.service.ts:16",{"_index":213,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["navigation.service.ts:24",{"_index":145,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:25",{"_index":144,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:26",{"_index":103,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:49",{"_index":119,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:73",{"_index":137,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.service.ts:95",{"_index":141,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navigation.ts",{"_index":9,"title":{},"body":{"classes/AopBaseNavigation.html":{},"coverage.html":{}}}],["navigation.ts:10",{"_index":20,"title":{},"body":{"classes/AopBaseNavigation.html":{}}}],["navigation.ts:11",{"_index":44,"title":{},"body":{"classes/AopBaseNavigation.html":{}}}],["navigation.ts:12",{"_index":46,"title":{},"body":{"classes/AopBaseNavigation.html":{}}}],["navigationextra",{"_index":70,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["navigationextras",{"_index":60,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigations",{"_index":643,"title":{},"body":{"index.html":{}}}],["navigationservice",{"_index":581,"title":{},"body":{"index.html":{}}}],["navobj",{"_index":40,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/GoodProxy.html":{},"miscellaneous/functions.html":{}}}],["navobj.destinationpage",{"_index":202,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navobj.navigationextra",{"_index":206,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navobj.param",{"_index":181,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navobj.preprocess",{"_index":179,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navobj.routetransform",{"_index":184,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["navobj.routetransform.path",{"_index":203,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["need",{"_index":556,"title":{},"body":{"index.html":{}}}],["negative",{"_index":624,"title":{},"body":{"index.html":{}}}],["new",{"_index":273,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["newly",{"_index":651,"title":{},"body":{"index.html":{}}}],["newnavobj",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["next",{"_index":76,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["ngmodule",{"_index":236,"title":{},"body":{"modules/AopRoutingModule.html":{},"index.html":{}}}],["node",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":571,"title":{},"body":{"index.html":{}}}],["note",{"_index":564,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":282,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["now",{"_index":656,"title":{},"body":{"index.html":{}}}],["npm",{"_index":573,"title":{},"body":{"index.html":{}}}],["number",{"_index":74,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["numeric",{"_index":641,"title":{},"body":{"index.html":{}}}],["obj",{"_index":598,"title":{},"body":{"index.html":{}}}],["object",{"_index":117,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["observable",{"_index":243,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["observable_required",{"_index":489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["observable_stream",{"_index":491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["occurred",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["of('hello",{"_index":276,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["of('page1",{"_index":607,"title":{},"body":{"index.html":{}}}],["of(...some",{"_index":620,"title":{},"body":{"index.html":{}}}],["of(1",{"_index":603,"title":{},"body":{"index.html":{}}}],["of(new",{"_index":278,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["of(obj",{"_index":608,"title":{},"body":{"index.html":{}}}],["oldnavobj",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operation",{"_index":617,"title":{},"body":{"index.html":{}}}],["operations",{"_index":552,"title":{},"body":{"index.html":{}}}],["operations).pipe",{"_index":621,"title":{},"body":{"index.html":{}}}],["operators",{"_index":622,"title":{},"body":{"index.html":{}}}],["optional",{"_index":38,"title":{},"body":{"classes/AopBaseNavigation.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":609,"title":{},"body":{"index.html":{}}}],["original",{"_index":534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["out",{"_index":704,"title":{},"body":{"overview.html":{}}}],["override",{"_index":559,"title":{},"body":{"index.html":{}}}],["overrided",{"_index":22,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{}}}],["overriden",{"_index":217,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["overview",{"_index":697,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":464,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":128,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["page1",{"_index":591,"title":{},"body":{"index.html":{}}}],["page1component",{"_index":666,"title":{},"body":{"index.html":{}}}],["page2",{"_index":667,"title":{},"body":{"index.html":{}}}],["page2component",{"_index":668,"title":{},"body":{"index.html":{}}}],["page3",{"_index":672,"title":{},"body":{"index.html":{}}}],["page3component",{"_index":673,"title":{},"body":{"index.html":{}}}],["param",{"_index":51,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["parameter",{"_index":115,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["parameter(s",{"_index":646,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["pass",{"_index":594,"title":{},"body":{"index.html":{}}}],["passed",{"_index":31,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"classes/GoodProxy.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["path).canactivate",{"_index":408,"title":{},"body":{"classes/RouteHelper.html":{}}}],["path).component",{"_index":403,"title":{},"body":{"classes/RouteHelper.html":{}}}],["path1",{"_index":679,"title":{},"body":{"index.html":{}}}],["pathobj",{"_index":391,"title":{},"body":{"classes/RouteHelper.html":{}}}],["perform",{"_index":550,"title":{},"body":{"index.html":{}}}],["performed",{"_index":644,"title":{},"body":{"index.html":{}}}],["performs",{"_index":120,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["persistent",{"_index":691,"title":{},"body":{"index.html":{}}}],["pertaining",{"_index":583,"title":{},"body":{"index.html":{}}}],["point",{"_index":363,"title":{},"body":{"classes/RouteHelper.html":{}}}],["points",{"_index":379,"title":{},"body":{"classes/RouteHelper.html":{}}}],["popstate",{"_index":502,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["popste",{"_index":623,"title":{},"body":{"index.html":{}}}],["positive",{"_index":630,"title":{},"body":{"index.html":{}}}],["preparenavobject",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["preparenavobject(result",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["preprocess",{"_index":79,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["preprocessfunc",{"_index":114,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["preprocessfunc(param",{"_index":208,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["preprocessfunc.name",{"_index":210,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["preprocress_func",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["present",{"_index":133,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["previous",{"_index":615,"title":{},"body":{"index.html":{}}}],["prior",{"_index":131,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["pristinerouteconfig",{"_index":332,"title":{},"body":{"classes/RouteHelper.html":{}}}],["private",{"_index":87,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{}}}],["proceeds",{"_index":536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["process",{"_index":323,"title":{},"body":{"classes/NavAux.html":{}}}],["projects/.../enum.ts",{"_index":487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../nav",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../navigation",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../test.ts",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../utility.ts",{"_index":514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/aop",{"_index":6,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":30,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["property",{"_index":111,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["provide",{"_index":23,"title":{},"body":{"classes/AopBaseNavigation.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"index.html":{}}}],["provided",{"_index":129,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["providedin",{"_index":166,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{}}}],["provider",{"_index":225,"title":{},"body":{"injectables/AopProxyNavigationService.html":{}}}],["providers",{"_index":238,"title":{},"body":{"modules/AopRoutingModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":548,"title":{},"body":{"index.html":{}}}],["providing",{"_index":680,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":149,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"coverage.html":{}}}],["proxynavigationservice",{"_index":100,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["proxynavref",{"_index":90,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":176,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"classes/Transient.html":{},"index.html":{}}}],["random",{"_index":280,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["recommended",{"_index":27,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{}}}],["reference",{"_index":110,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["remove",{"_index":684,"title":{},"body":{"index.html":{}}}],["removed",{"_index":687,"title":{},"body":{"index.html":{}}}],["removeguardsindex",{"_index":416,"title":{},"body":{"classes/RouteHelper.html":{}}}],["removeguardsindex.push(guardindex",{"_index":423,"title":{},"body":{"classes/RouteHelper.html":{}}}],["removes",{"_index":366,"title":{},"body":{"classes/RouteHelper.html":{}}}],["removing",{"_index":683,"title":{},"body":{"index.html":{}}}],["require",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":321,"title":{},"body":{"classes/NavAux.html":{},"index.html":{}}}],["requires",{"_index":566,"title":{},"body":{"index.html":{}}}],["reset",{"_index":703,"title":{},"body":{"overview.html":{}}}],["resetrouterconfig",{"_index":340,"title":{},"body":{"classes/RouteHelper.html":{}}}],["resetrouterconfig(router",{"_index":377,"title":{},"body":{"classes/RouteHelper.html":{}}}],["result",{"_index":52,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":54,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":198,"title":{},"body":{"injectables/AopNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["returned",{"_index":597,"title":{},"body":{"index.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":692,"title":{},"body":{"index.html":{}}}],["root",{"_index":167,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{}}}],["route",{"_index":127,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["routeback",{"_index":245,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["routebackasync",{"_index":246,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["routehelper",{"_index":160,"title":{"classes/RouteHelper.html":{}},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"coverage.html":{}}}],["routehelper.modifyroutetable(this.routerref",{"_index":183,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["routehelper.resetrouterconfig(this.routerref",{"_index":186,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["routeinput",{"_index":399,"title":{},"body":{"classes/RouteHelper.html":{}}}],["routenext",{"_index":247,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["routenext('page1",{"_index":593,"title":{},"body":{"index.html":{}}}],["routenext('test",{"_index":268,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["routenext(page",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routenextasync",{"_index":248,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["router",{"_index":98,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["router.config.find((element",{"_index":412,"title":{},"body":{"classes/RouteHelper.html":{}}}],["router.config.push(routeinput",{"_index":400,"title":{},"body":{"classes/RouteHelper.html":{}}}],["routerref",{"_index":91,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["routes",{"_index":342,"title":{},"body":{"classes/RouteHelper.html":{},"index.html":{}}}],["routetostate",{"_index":249,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["routetostate(2",{"_index":633,"title":{},"body":{"index.html":{}}}],["routetostate(state",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routetostate(undefined",{"_index":310,"title":{},"body":{"classes/MockDecoratorClass.html":{}}}],["routetostateasync",{"_index":250,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["routetransform",{"_index":64,"title":{"interfaces/RouteTransform.html":{}},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["routetransform.canactivateguards",{"_index":396,"title":{},"body":{"classes/RouteHelper.html":{}}}],["routetransform.component",{"_index":395,"title":{},"body":{"classes/RouteHelper.html":{}}}],["routetransform.path",{"_index":393,"title":{},"body":{"classes/RouteHelper.html":{}}}],["routing",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["routing.module.ts",{"_index":231,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["routing.module.ts:8",{"_index":234,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["routing/src/lib/aop",{"_index":230,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["routing/src/lib/decorators/nav",{"_index":433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["routing/src/lib/model/abstract/aop",{"_index":7,"title":{},"body":{"classes/AopBaseNavigation.html":{},"coverage.html":{}}}],["routing/src/lib/model/enum.ts",{"_index":488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["routing/src/lib/model/models.ts",{"_index":56,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"interfaces/RouteTransform.html":{},"coverage.html":{}}}],["routing/src/lib/model/models.ts:23",{"_index":59,"title":{},"body":{"classes/AopConfig.html":{}}}],["routing/src/lib/model/nav",{"_index":316,"title":{},"body":{"classes/NavAux.html":{},"coverage.html":{}}}],["routing/src/lib/navigation/aop",{"_index":85,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"coverage.html":{}}}],["routing/src/lib/navigation/navigation",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["routing/src/lib/navigation/router",{"_index":330,"title":{},"body":{"classes/RouteHelper.html":{},"coverage.html":{}}}],["routing/src/lib/shared/transient.ts",{"_index":426,"title":{},"body":{"classes/Transient.html":{},"coverage.html":{}}}],["routing/src/lib/shared/transient.ts:3",{"_index":428,"title":{},"body":{"classes/Transient.html":{}}}],["routing/src/lib/shared/utility.ts",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["routing/src/mock/test",{"_index":241,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["routing/src/test.ts",{"_index":459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routingusage",{"_index":575,"title":{},"body":{"index.html":{}}}],["runs",{"_index":570,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":561,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":244,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"dependencies.html":{},"index.html":{}}}],["same",{"_index":686,"title":{},"body":{"index.html":{}}}],["sampleclass",{"_index":649,"title":{},"body":{"index.html":{}}}],["sass",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":139,"title":{},"body":{"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{}}}],["session",{"_index":506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["set",{"_index":612,"title":{},"body":{"index.html":{}}}],["shared/transient",{"_index":163,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["shared/utility",{"_index":157,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{}}}],["simplemockmethod",{"_index":293,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["skeleton",{"_index":21,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{}}}],["skiplocationchange",{"_index":613,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{}}}],["spec\\.ts",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["started",{"_index":547,"title":{"index.html":{}},"body":{}}],["state",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["state_history",{"_index":503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":631,"title":{},"body":{"index.html":{}}}],["static",{"_index":88,"title":{},"body":{"injectables/AopNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/RouteHelper.html":{},"classes/Transient.html":{}}}],["statically",{"_index":676,"title":{},"body":{"index.html":{}}}],["steps",{"_index":654,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":611,"title":{},"body":{"index.html":{}}}],["stream",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string",{"_index":66,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"index.html":{}}}],["subscribe",{"_index":601,"title":{},"body":{"index.html":{}}}],["suppose",{"_index":670,"title":{},"body":{"index.html":{}}}],["switchmap(x",{"_index":606,"title":{},"body":{"index.html":{}}}],["table",{"_index":348,"title":{},"body":{"classes/RouteHelper.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":645,"title":{},"body":{"index.html":{}}}],["takes",{"_index":642,"title":{},"body":{"index.html":{}}}],["targeted",{"_index":587,"title":{},"body":{"index.html":{}}}],["test",{"_index":262,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"index.html":{}}}],["test2",{"_index":599,"title":{},"body":{"index.html":{}}}],["testmethod",{"_index":592,"title":{},"body":{"index.html":{}}}],["that's",{"_index":320,"title":{},"body":{"classes/NavAux.html":{}}}],["this.addnewroutepath(router",{"_index":394,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.addorremovecanactivateguard(router",{"_index":406,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.changeroutecomponent(router",{"_index":397,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.disablecanactivateguards(router",{"_index":407,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.executeimperativenavigation(navobj",{"_index":185,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.executepreprocesslogic(navobj.preprocess",{"_index":180,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.getroutepathobj(router",{"_index":392,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.iscanactivateguardexist(router",{"_index":410,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.location",{"_index":173,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.locationref",{"_index":200,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.locationref.back",{"_index":189,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.pristinerouteconfig",{"_index":389,"title":{},"body":{"classes/RouteHelper.html":{}}}],["this.proxynavigationservice",{"_index":175,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.proxynavref.gotonextpage(navobj",{"_index":178,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.proxynavref.gotopreviouspage(navobj",{"_index":187,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.proxynavref.gotostate(navobj",{"_index":194,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.router",{"_index":171,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.routerref",{"_index":199,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.routerref.navigate([destinationpage",{"_index":205,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["this.simplemockmethod",{"_index":285,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["this.updatecanactivateguards(router",{"_index":398,"title":{},"body":{"classes/RouteHelper.html":{}}}],["through",{"_index":222,"title":{},"body":{"injectables/AopProxyNavigationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["throw",{"_index":193,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/RouteHelper.html":{}}}],["token",{"_index":132,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["top",{"_index":576,"title":{},"body":{"index.html":{}}}],["transient",{"_index":162,"title":{"classes/Transient.html":{}},"body":{"injectables/AopNavigationService.html":{},"classes/Transient.html":{},"coverage.html":{}}}],["transient.useexperimentalfeatures",{"_index":168,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["traversal",{"_index":635,"title":{},"body":{"index.html":{}}}],["traverse",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["traversion",{"_index":634,"title":{},"body":{"index.html":{}}}],["trim",{"_index":424,"title":{},"body":{"classes/RouteHelper.html":{}}}],["true",{"_index":614,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":188,"title":{},"body":{"injectables/AopNavigationService.html":{}}}],["tslib",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":75,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{}}}],["turned",{"_index":510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":37,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"injectables/AopProxyNavigationService.html":{},"modules/AopRoutingModule.html":{},"classes/GoodProxy.html":{},"classes/NavAux.html":{},"classes/RouteHelper.html":{},"interfaces/RouteTransform.html":{},"classes/Transient.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":78,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"injectables/AopNavigationService.html":{},"interfaces/AopNavigator.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{}}}],["typescript",{"_index":554,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":71,"title":{},"body":{"classes/AopConfig.html":{},"interfaces/AopNav.html":{},"interfaces/AopNavigator.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/NavAux.html":{},"interfaces/RouteTransform.html":{}}}],["update",{"_index":383,"title":{},"body":{"classes/RouteHelper.html":{}}}],["updatecanactivateguards",{"_index":341,"title":{},"body":{"classes/RouteHelper.html":{}}}],["updatecanactivateguards(router",{"_index":381,"title":{},"body":{"classes/RouteHelper.html":{}}}],["updated",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatedcanactivatedguards",{"_index":411,"title":{},"body":{"classes/RouteHelper.html":{}}}],["updatenavobj",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatenavobj(oldnavobj",{"_index":529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updating",{"_index":376,"title":{},"body":{"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{}}}],["updating_navaux",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["upon",{"_index":693,"title":{},"body":{"index.html":{}}}],["url",{"_index":259,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":134,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["useclass",{"_index":223,"title":{},"body":{"injectables/AopProxyNavigationService.html":{},"index.html":{}}}],["used",{"_index":112,"title":{},"body":{"injectables/AopNavigationService.html":{},"index.html":{}}}],["useexperimentalfeatures",{"_index":427,"title":{},"body":{"classes/Transient.html":{}}}],["user",{"_index":647,"title":{},"body":{"index.html":{}}}],["uses",{"_index":125,"title":{},"body":{"injectables/AopNavigationService.html":{},"miscellaneous/functions.html":{}}}],["usevalue",{"_index":239,"title":{},"body":{"modules/AopRoutingModule.html":{}}}],["using",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["utilize",{"_index":28,"title":{},"body":{"classes/AopBaseNavigation.html":{},"classes/GoodProxy.html":{}}}],["value",{"_index":350,"title":{},"body":{"classes/RouteHelper.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":707,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":567,"title":{},"body":{"index.html":{}}}],["void",{"_index":42,"title":{},"body":{"classes/AopBaseNavigation.html":{},"injectables/AopNavigationService.html":{},"injectables/AopProxyNavigationService.html":{},"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{},"classes/RouteHelper.html":{},"index.html":{}}}],["want",{"_index":671,"title":{},"body":{"index.html":{}}}],["without",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":271,"title":{},"body":{"classes/BadProxy.html":{},"classes/GoodProxy.html":{},"classes/MockDecoratorClass.html":{}}}],["wrapped",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":420,"title":{},"body":{"classes/RouteHelper.html":{}}}],["yes",{"_index":104,"title":{},"body":{"injectables/AopNavigationService.html":{},"classes/NavAux.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":702,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AopBaseNavigation.html":{"url":"classes/AopBaseNavigation.html","title":"class - AopBaseNavigation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AopBaseNavigation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/abstract/aop-base-navigation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                goToNextPage\n                            \n                            \n                                    Abstract\n                                goToPreviousPage\n                            \n                            \n                                    Abstract\n                                goToState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToNextPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToNextPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/model/abstract/aop-base-navigation.ts:10\n                \n            \n\n\n            \n                \n                    Skeleton methods to be overrided and provide custom navigation logic.\nRecommended to utilize NavAux class, as this class encapsulates navigation properties and will be passed\nby the decorator functions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEncapsulates navigation properties\n\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToPreviousPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPreviousPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/model/abstract/aop-base-navigation.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToState(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/model/abstract/aop-base-navigation.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NavAux } from '../nav-aux';\n\nexport abstract class AopBaseNavigation {\n  /**\n   * Skeleton methods to be overrided and provide custom navigation logic.\n   * Recommended to utilize NavAux class, as this class encapsulates navigation properties and will be passed\n   * by the decorator functions.\n   * @param navObj - Encapsulates navigation properties\n   */\n  abstract goToNextPage(navObj: NavAux, ...args): void;\n  abstract goToPreviousPage(navObj: NavAux, ...args): void;\n  abstract goToState(navObj: NavAux, ...args): void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AopConfig.html":{"url":"classes/AopConfig.html","title":"class - AopConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AopConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expirementNav\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expirementNav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/model/models.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NavigationExtras } from '@angular/router';\nimport { Type } from '@angular/core';\n\nexport interface RouteTransform {\n  path: string;\n  component?: Type;\n  canActivateGuards?: any[];\n}\n\nexport interface AopNav {\n  routeTransform: RouteTransform;\n  navigationExtra?: NavigationExtras | undefined;\n}\nexport interface AopNavigator {\n  destinationPage?: string | number;\n  navigationExtra?: NavigationExtras | undefined;\n  // tslint:disable-next-line:ban-types\n  preprocess?: Function;\n  param?: any;\n}\n\nexport class AopConfig {\n  expirementNav: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AopNav.html":{"url":"interfaces/AopNav.html","title":"interface - AopNav","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AopNav\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        navigationExtra\n                                \n                                \n                                        routeTransform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        navigationExtra\n                                    \n                                \n                                \n                                    \n                                        navigationExtra:     NavigationExtras | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NavigationExtras | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeTransform\n                                    \n                                \n                                \n                                    \n                                        routeTransform:         RouteTransform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteTransform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NavigationExtras } from '@angular/router';\nimport { Type } from '@angular/core';\n\nexport interface RouteTransform {\n  path: string;\n  component?: Type;\n  canActivateGuards?: any[];\n}\n\nexport interface AopNav {\n  routeTransform: RouteTransform;\n  navigationExtra?: NavigationExtras | undefined;\n}\nexport interface AopNavigator {\n  destinationPage?: string | number;\n  navigationExtra?: NavigationExtras | undefined;\n  // tslint:disable-next-line:ban-types\n  preprocess?: Function;\n  param?: any;\n}\n\nexport class AopConfig {\n  expirementNav: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AopNavigationService.html":{"url":"injectables/AopNavigationService.html","title":"injectable - AopNavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AopNavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/navigation/aop-navigation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                locationRef\n                            \n                            \n                                    Private\n                                    Static\n                                proxyNavRef\n                            \n                            \n                                    Private\n                                    Static\n                                routerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                executeImperativeNavigation\n                            \n                            \n                                    Static\n                                executePreProcessLogic\n                            \n                            \n                                    Static\n                                getLocationObj\n                            \n                            \n                                    Static\n                                getRouterObj\n                            \n                            \n                                    Static\n                                goToNextPage\n                            \n                            \n                                    Static\n                                goToPreviousPage\n                            \n                            \n                                    Static\n                                goToState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, location: Location, proxyNavigationService?: AopProxyNavigationService, config?: AopConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxyNavigationService\n                                                  \n                                                        \n                                                                        AopProxyNavigationService\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AopConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            executeImperativeNavigation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeImperativeNavigation(navObj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            executePreProcessLogic\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executePreProcessLogic(preProcessFunc: Function, param)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:146\n                \n            \n\n\n            \n                \n                    Executes the passed function reference. Passed param property will be used as function argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    preProcessFunc\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nFunction reference\n\n\n                                    \n                                \n                                \n                                    param\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nParameter to be used for the function\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getLocationObj\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocationObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:123\n                \n            \n\n\n            \n                \n                    Returns a location object.\n\n\n                    \n                        Returns :         Location\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getRouterObj\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouterObj()\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:116\n                \n            \n\n\n            \n                \n                    Returns a router object.\n\n\n                    \n                        Returns :         Router\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            goToNextPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToNextPage(navObj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:49\n                \n            \n\n\n            \n                \n                    Performs action to call router navigate method and uses the destinationPage property of the NavAux instance\nto route to next page. If preprocess property of NavAux is provided, it will be executed prior to route navigation.\nIf a ProxyNavigationService token is present it will use the goToNextPage implementation of the ProxyNavigationService instead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nInstance of NavAux class\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            goToPreviousPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPreviousPage(navObj: NavAux)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:73\n                \n            \n\n\n            \n                \n                    Performs action to call the back method of the Location service. If preprocess property of NavAux is provided, it will be executed\nprior to the execution of the back method.\nIf a ProxyNavigationService token is present it will use the goToPreviousPage implementation of the ProxyNavigationService instead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nInstance of NavAux class\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            goToState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToState(navObj: NavAux)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:95\n                \n            \n\n\n            \n                \n                    Performs action to call the go method of the History object. If preprocess property of NavAux is provided, it will be executed\nprior to the execution of the go method.\nIf a ProxyNavigationService token is present it will use the goToState implementation of the ProxyNavigationService instead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nInstance of NavAux class\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            locationRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            proxyNavRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AopProxyNavigationService\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            routerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/navigation/aop-navigation.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AopConfig } from '../model/models';\nimport { AopProxyNavigationService } from './aop-proxy-navigation.service';\nimport {\n  createErrorObj,\n  isAopNavObj,\n  isProxyNavigationProvided,\n  isTypeNumber,\n  isTypeString,\n  logError,\n} from '../shared/utility';\nimport { NavError } from '../model/enum';\nimport { RouteHelper } from './router-helper';\nimport { Transient } from '../shared/transient';\nimport { NavAux } from '../model/nav-aux';\n\n// @dynamic//\n@Injectable({\n  providedIn: 'root',\n})\nexport class AopNavigationService {\n  private static routerRef: Router;\n  private static locationRef: Location;\n  private static proxyNavRef: AopProxyNavigationService;\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    @Optional() private proxyNavigationService?: AopProxyNavigationService,\n    @Optional() config?: AopConfig,\n  ) {\n    if (config) {\n      Transient.useExperimentalFeatures = config.expirementNav;\n    }\n    AopNavigationService.routerRef = this.router;\n    AopNavigationService.locationRef = this.location;\n    AopNavigationService.proxyNavRef = this.proxyNavigationService;\n  }\n\n  /**\n   * Performs action to call router navigate method and uses the destinationPage property of the NavAux instance\n   * to route to next page. If preprocess property of NavAux is provided, it will be executed prior to route navigation.\n   * If a ProxyNavigationService token is present it will use the goToNextPage implementation of the ProxyNavigationService instead.\n   *\n   * @param navObj - Instance of NavAux class\n   */\n  public static goToNextPage(navObj: any): void {\n    if (isProxyNavigationProvided(this.proxyNavRef)) {\n      this.proxyNavRef.goToNextPage(navObj);\n    } else {\n      if (navObj && navObj.preprocess) {\n        this.executePreProcessLogic(navObj.preprocess, navObj.param);\n      }\n\n      if (isAopNavObj(navObj)) {\n        RouteHelper.modifyRouteTable(this.routerRef, navObj.routeTransform);\n        this.executeImperativeNavigation(navObj);\n        RouteHelper.resetRouterConfig(this.routerRef);\n      } else {\n        this.executeImperativeNavigation(navObj);\n      }\n    }\n  }\n\n  /**\n   * Performs action to call the back method of the Location service. If preprocess property of NavAux is provided, it will be executed\n   * prior to the execution of the back method.\n   * If a ProxyNavigationService token is present it will use the goToPreviousPage implementation of the ProxyNavigationService instead.\n   * @param navObj - Instance of NavAux class\n   */\n  public static goToPreviousPage(navObj: NavAux): void {\n    if (isProxyNavigationProvided(this.proxyNavRef)) {\n      this.proxyNavRef.goToPreviousPage(navObj);\n    } else {\n      if (navObj && navObj.preprocess) {\n        this.executePreProcessLogic(navObj.preprocess, navObj.param);\n      }\n      try {\n        this.locationRef.back();\n      } catch (e) {\n        logError(createErrorObj(NavError.LOCATION_BACK));\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Performs action to call the go method of the History object. If preprocess property of NavAux is provided, it will be executed\n   * prior to the execution of the go method.\n   * If a ProxyNavigationService token is present it will use the goToState implementation of the ProxyNavigationService instead.\n   * @param navObj - Instance of NavAux class\n   */\n  public static goToState(navObj: NavAux) {\n    if (isProxyNavigationProvided(this.proxyNavRef)) {\n      this.proxyNavRef.goToState(navObj);\n    } else {\n      if (navObj && navObj.preprocess) {\n        this.executePreProcessLogic(navObj.preprocess, navObj.param);\n      }\n      try {\n        if (isTypeNumber(navObj.destinationPage)) {\n          history.go(navObj.destinationPage as number);\n        }\n      } catch (e) {\n        logError(createErrorObj(NavError.STATE_HISTORY));\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Returns a router object.\n   */\n  public static getRouterObj(): Router {\n    return this.routerRef;\n  }\n\n  /**\n   * Returns a location object.\n   */\n  public static getLocationObj(): Location {\n    return this.locationRef;\n  }\n\n  public static executeImperativeNavigation(navObj: any): void {\n    const destinationPage = navObj.destinationPage || navObj.routeTransform.path;\n\n    if (isTypeString(destinationPage)) {\n      try {\n        this.routerRef.navigate([destinationPage], navObj.navigationExtra);\n      } catch (e) {\n        logError(createErrorObj(NavError.ROUTING + destinationPage));\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Executes the passed function reference. Passed param property will be used as function argument.\n   * @param preProcessFunc - Function reference\n   * @param param - Parameter to be used for the function\n   */\n  // tslint:disable-next-line:ban-types\n  public static executePreProcessLogic(preProcessFunc: Function, param): void {\n    try {\n      if (preProcessFunc) {\n        param ? preProcessFunc(param) : preProcessFunc();\n      }\n    } catch (e) {\n      logError(createErrorObj(NavError.PREPROCRESS_FUNC + preProcessFunc.name));\n      throw e;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AopNavigator.html":{"url":"interfaces/AopNavigator.html","title":"interface - AopNavigator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AopNavigator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        destinationPage\n                                \n                                \n                                            Optional\n                                        navigationExtra\n                                \n                                \n                                            Optional\n                                        param\n                                \n                                \n                                            Optional\n                                        preprocess\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinationPage\n                                    \n                                \n                                \n                                    \n                                        destinationPage:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigationExtra\n                                    \n                                \n                                \n                                    \n                                        navigationExtra:     NavigationExtras | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NavigationExtras | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        param\n                                    \n                                \n                                \n                                    \n                                        param:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preprocess\n                                    \n                                \n                                \n                                    \n                                        preprocess:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NavigationExtras } from '@angular/router';\nimport { Type } from '@angular/core';\n\nexport interface RouteTransform {\n  path: string;\n  component?: Type;\n  canActivateGuards?: any[];\n}\n\nexport interface AopNav {\n  routeTransform: RouteTransform;\n  navigationExtra?: NavigationExtras | undefined;\n}\nexport interface AopNavigator {\n  destinationPage?: string | number;\n  navigationExtra?: NavigationExtras | undefined;\n  // tslint:disable-next-line:ban-types\n  preprocess?: Function;\n  param?: any;\n}\n\nexport class AopConfig {\n  expirementNav: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AopProxyNavigationService.html":{"url":"injectables/AopProxyNavigationService.html","title":"injectable - AopProxyNavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AopProxyNavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/navigation/aop-proxy-navigation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToNextPage\n                            \n                            \n                                goToPreviousPage\n                            \n                            \n                                goToState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextPage\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-proxy-navigation.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousPage\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-proxy-navigation.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToState\n                        \n                        \n                    \n                \n            \n            \n                \ngoToState(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/aop-proxy-navigation.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NavAux } from '../model/nav-aux';\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Dummy service to allow custom implemenation of navigation logic.\n * Should be overriden by a custom navigation class inheriting BaseNavigation Class.\n * The custom navigation class should be provided by the angular injector through the `useClass` attribute\n * of the provider array.\n */\nexport class AopProxyNavigationService {\n  goToNextPage(navObj: NavAux, ...args: any[]): void {}\n  goToPreviousPage(navObj: NavAux, ...args: any[]): void {}\n  goToState(navObj: NavAux, ...args: any[]): void {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AopRoutingModule.html":{"url":"modules/AopRoutingModule.html","title":"module - AopRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AopRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/aop-routing/src/lib/aop-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: AopConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/aop-routing.module.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                AopConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AopConfig } from './model/models';\n\n@NgModule({\n  imports: [],\n})\nexport class AopRoutingModule {\n  static forRoot(config: AopConfig): ModuleWithProviders {\n    return {\n      ngModule: AopRoutingModule,\n      providers: [{ provide: AopConfig, useValue: config }],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadProxy.html":{"url":"classes/BadProxy.html","title":"class - BadProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/mock/test-data.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\nimport {\n  RouteBack,\n  RouteBackAsync,\n  RouteNext,\n  RouteNextAsync,\n  RouteToState,\n  RouteToStateAsync,\n} from '../lib/decorators/nav-decorators';\nimport { AopBaseNavigation } from '../lib/model/abstract/aop-base-navigation';\nimport { NavAux } from '../lib/model/nav-aux';\n\nexport class GoodProxy extends AopBaseNavigation {\n  goToNextPage(navObj: NavAux, ...args: any[]): void {}\n  goToPreviousPage(navObj: NavAux, ...args: any[]): void {}\n  goToState(navObj: NavAux, ...args: any[]): void {}\n}\n\nexport class BadProxy {}\n\nexport function mockFunction() {}\n\nexport function mockPartialRouter(url: string): any {\n  return {\n    url: '/' + url,\n    navigate: jasmine.createSpy('navigate'),\n    config: [\n      { path: '123', component: 'test-comp', canActivate: ['guard1'] },\n      { path: 'abc', component: 'test-comp' },\n    ],\n  };\n}\n\nexport class MockDecoratorClass {\n  @RouteNext('test-page')\n  mockNextMethod(): string {\n    return 'hello world';\n  }\n\n  @RouteNext()\n  mockNextObjMethod(): NavAux {\n    return new NavAux('aop-nav');\n  }\n\n  @RouteNextAsync()\n  mockNextMethodAsync(): Observable {\n    return of('hello world');\n  }\n\n  @RouteNextAsync()\n  mockNextObjMethodAsync(): Observable {\n    return of(new NavAux('aop-nav'));\n  }\n\n  @RouteNextAsync()\n  mockNextAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteBack()\n  mockBackMethod(): void {\n    // do nothing\n  }\n\n  @RouteBackAsync()\n  mockBackMethodAsync(): Observable {\n    return of(new NavAux(undefined, undefined, this.simpleMockMethod));\n  }\n\n  @RouteBackAsync()\n  mockBackAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteToState(-1)\n  mockRouteToStateMethod(): void {\n    // do nothing\n  }\n\n  @RouteToState()\n  mockRouteToStateMethodObj(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethodAsync(): Observable {\n    return of(-1);\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethoObjAsync(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateAsyncError(): any {\n    return 'random string';\n  }\n\n  simpleMockMethod(): string {\n    return 'hello world';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoodProxy.html":{"url":"classes/GoodProxy.html","title":"class - GoodProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoodProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/mock/test-data.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AopBaseNavigation\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToNextPage\n                            \n                            \n                                goToPreviousPage\n                            \n                            \n                                goToState\n                            \n                            \n                                    Abstract\n                                goToNextPage\n                            \n                            \n                                    Abstract\n                                goToPreviousPage\n                            \n                            \n                                    Abstract\n                                goToState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToNextPage\n                        \n                        \n                    \n                \n            \n            \n                \ngoToNextPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToPreviousPage\n                        \n                        \n                    \n                \n            \n            \n                \ngoToPreviousPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goToState\n                        \n                        \n                    \n                \n            \n            \n                \ngoToState(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToNextPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToNextPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         AopBaseNavigation\n\n                \n            \n            \n                \n                        Defined in         AopBaseNavigation:10\n\n                \n            \n\n\n            \n                \n                    Skeleton methods to be overrided and provide custom navigation logic.\nRecommended to utilize NavAux class, as this class encapsulates navigation properties and will be passed\nby the decorator functions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEncapsulates navigation properties\n\n\n                                    \n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToPreviousPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToPreviousPage(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         AopBaseNavigation\n\n                \n            \n            \n                \n                        Defined in         AopBaseNavigation:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            goToState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    goToState(navObj: NavAux, ...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         AopBaseNavigation\n\n                \n            \n            \n                \n                        Defined in         AopBaseNavigation:12\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n                                    \n                                                NavAux\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\nimport {\n  RouteBack,\n  RouteBackAsync,\n  RouteNext,\n  RouteNextAsync,\n  RouteToState,\n  RouteToStateAsync,\n} from '../lib/decorators/nav-decorators';\nimport { AopBaseNavigation } from '../lib/model/abstract/aop-base-navigation';\nimport { NavAux } from '../lib/model/nav-aux';\n\nexport class GoodProxy extends AopBaseNavigation {\n  goToNextPage(navObj: NavAux, ...args: any[]): void {}\n  goToPreviousPage(navObj: NavAux, ...args: any[]): void {}\n  goToState(navObj: NavAux, ...args: any[]): void {}\n}\n\nexport class BadProxy {}\n\nexport function mockFunction() {}\n\nexport function mockPartialRouter(url: string): any {\n  return {\n    url: '/' + url,\n    navigate: jasmine.createSpy('navigate'),\n    config: [\n      { path: '123', component: 'test-comp', canActivate: ['guard1'] },\n      { path: 'abc', component: 'test-comp' },\n    ],\n  };\n}\n\nexport class MockDecoratorClass {\n  @RouteNext('test-page')\n  mockNextMethod(): string {\n    return 'hello world';\n  }\n\n  @RouteNext()\n  mockNextObjMethod(): NavAux {\n    return new NavAux('aop-nav');\n  }\n\n  @RouteNextAsync()\n  mockNextMethodAsync(): Observable {\n    return of('hello world');\n  }\n\n  @RouteNextAsync()\n  mockNextObjMethodAsync(): Observable {\n    return of(new NavAux('aop-nav'));\n  }\n\n  @RouteNextAsync()\n  mockNextAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteBack()\n  mockBackMethod(): void {\n    // do nothing\n  }\n\n  @RouteBackAsync()\n  mockBackMethodAsync(): Observable {\n    return of(new NavAux(undefined, undefined, this.simpleMockMethod));\n  }\n\n  @RouteBackAsync()\n  mockBackAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteToState(-1)\n  mockRouteToStateMethod(): void {\n    // do nothing\n  }\n\n  @RouteToState()\n  mockRouteToStateMethodObj(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethodAsync(): Observable {\n    return of(-1);\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethoObjAsync(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateAsyncError(): any {\n    return 'random string';\n  }\n\n  simpleMockMethod(): string {\n    return 'hello world';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockDecoratorClass.html":{"url":"classes/MockDecoratorClass.html","title":"class - MockDecoratorClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockDecoratorClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/mock/test-data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mockBackAsyncError\n                            \n                            \n                                mockBackMethod\n                            \n                            \n                                mockBackMethodAsync\n                            \n                            \n                                mockNextAsyncError\n                            \n                            \n                                mockNextMethod\n                            \n                            \n                                mockNextMethodAsync\n                            \n                            \n                                mockNextObjMethod\n                            \n                            \n                                mockNextObjMethodAsync\n                            \n                            \n                                mockRouteToStateAsyncError\n                            \n                            \n                                mockRouteToStateMethod\n                            \n                            \n                                mockRouteToStateMethodAsync\n                            \n                            \n                                mockRouteToStateMethodObj\n                            \n                            \n                                mockRouteToStateMethoObjAsync\n                            \n                            \n                                simpleMockMethod\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockBackAsyncError\n                        \n                        \n                    \n                \n            \n            \n                \nmockBackAsyncError()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteBackAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockBackMethod\n                        \n                        \n                    \n                \n            \n            \n                \nmockBackMethod()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteBack()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockBackMethodAsync\n                        \n                        \n                    \n                \n            \n            \n                \nmockBackMethodAsync()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteBackAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockNextAsyncError\n                        \n                        \n                    \n                \n            \n            \n                \nmockNextAsyncError()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteNextAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockNextMethod\n                        \n                        \n                    \n                \n            \n            \n                \nmockNextMethod()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteNext('test-page')\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockNextMethodAsync\n                        \n                        \n                    \n                \n            \n            \n                \nmockNextMethodAsync()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteNextAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockNextObjMethod\n                        \n                        \n                    \n                \n            \n            \n                \nmockNextObjMethod()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteNext()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NavAux\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockNextObjMethodAsync\n                        \n                        \n                    \n                \n            \n            \n                \nmockNextObjMethodAsync()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteNextAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockRouteToStateAsyncError\n                        \n                        \n                    \n                \n            \n            \n                \nmockRouteToStateAsyncError()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteToStateAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockRouteToStateMethod\n                        \n                        \n                    \n                \n            \n            \n                \nmockRouteToStateMethod()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteToState(undefined)\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockRouteToStateMethodAsync\n                        \n                        \n                    \n                \n            \n            \n                \nmockRouteToStateMethodAsync()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteToStateAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockRouteToStateMethodObj\n                        \n                        \n                    \n                \n            \n            \n                \nmockRouteToStateMethodObj()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteToState()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockRouteToStateMethoObjAsync\n                        \n                        \n                    \n                \n            \n            \n                \nmockRouteToStateMethoObjAsync()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RouteToStateAsync()\n                \n            \n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            simpleMockMethod\n                        \n                        \n                    \n                \n            \n            \n                \nsimpleMockMethod()\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/mock/test-data.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\nimport {\n  RouteBack,\n  RouteBackAsync,\n  RouteNext,\n  RouteNextAsync,\n  RouteToState,\n  RouteToStateAsync,\n} from '../lib/decorators/nav-decorators';\nimport { AopBaseNavigation } from '../lib/model/abstract/aop-base-navigation';\nimport { NavAux } from '../lib/model/nav-aux';\n\nexport class GoodProxy extends AopBaseNavigation {\n  goToNextPage(navObj: NavAux, ...args: any[]): void {}\n  goToPreviousPage(navObj: NavAux, ...args: any[]): void {}\n  goToState(navObj: NavAux, ...args: any[]): void {}\n}\n\nexport class BadProxy {}\n\nexport function mockFunction() {}\n\nexport function mockPartialRouter(url: string): any {\n  return {\n    url: '/' + url,\n    navigate: jasmine.createSpy('navigate'),\n    config: [\n      { path: '123', component: 'test-comp', canActivate: ['guard1'] },\n      { path: 'abc', component: 'test-comp' },\n    ],\n  };\n}\n\nexport class MockDecoratorClass {\n  @RouteNext('test-page')\n  mockNextMethod(): string {\n    return 'hello world';\n  }\n\n  @RouteNext()\n  mockNextObjMethod(): NavAux {\n    return new NavAux('aop-nav');\n  }\n\n  @RouteNextAsync()\n  mockNextMethodAsync(): Observable {\n    return of('hello world');\n  }\n\n  @RouteNextAsync()\n  mockNextObjMethodAsync(): Observable {\n    return of(new NavAux('aop-nav'));\n  }\n\n  @RouteNextAsync()\n  mockNextAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteBack()\n  mockBackMethod(): void {\n    // do nothing\n  }\n\n  @RouteBackAsync()\n  mockBackMethodAsync(): Observable {\n    return of(new NavAux(undefined, undefined, this.simpleMockMethod));\n  }\n\n  @RouteBackAsync()\n  mockBackAsyncError(): any {\n    return 'random string';\n  }\n\n  @RouteToState(-1)\n  mockRouteToStateMethod(): void {\n    // do nothing\n  }\n\n  @RouteToState()\n  mockRouteToStateMethodObj(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethodAsync(): Observable {\n    return of(-1);\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateMethoObjAsync(): Observable {\n    return of(new NavAux(-1));\n  }\n\n  @RouteToStateAsync()\n  mockRouteToStateAsyncError(): any {\n    return 'random string';\n  }\n\n  simpleMockMethod(): string {\n    return 'hello world';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavAux.html":{"url":"classes/NavAux.html","title":"class - NavAux","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavAux\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/nav-aux.ts\n        \n\n            \n                Description\n            \n            \n                Class to encapsulate extra navigation properties or methods that's required to execute the navigation process.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                destinationPage\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationExtra\n                            \n                            \n                                    Public\n                                    Optional\n                                param\n                            \n                            \n                                    Public\n                                    Optional\n                                preprocess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(destinationPage?: string | number, navigationExtra?: NavigationExtras | undefined, preprocess?: Function, param?: any)\n                    \n                \n                        \n                            \n                                Defined in projects/aop-routing/src/lib/model/nav-aux.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        destinationPage\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationExtra\n                                                  \n                                                        \n                                                                    NavigationExtras | undefined\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        preprocess\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        param\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            destinationPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/model/nav-aux.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationExtra\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavigationExtras | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/model/nav-aux.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            param\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/model/nav-aux.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            preprocess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/model/nav-aux.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NavigationExtras } from '@angular/router';\n\n/**\n * Class to encapsulate extra navigation properties or methods that's required to execute the navigation process.\n */\nexport class NavAux {\n  constructor(\n    public destinationPage?: string | number,\n    public navigationExtra?: NavigationExtras | undefined,\n    // tslint:disable-next-line:ban-types\n    public preprocess?: Function,\n    public param?: any,\n  ) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteHelper.html":{"url":"classes/RouteHelper.html","title":"class - RouteHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/navigation/router-helper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pristineRouteConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                addNewRoutePath\n                            \n                            \n                                    Static\n                                addOrRemoveCanActivateGuard\n                            \n                            \n                                    Static\n                                changeRouteComponent\n                            \n                            \n                                    Static\n                                disableCanActivateGuards\n                            \n                            \n                                    Static\n                                getRoutePathObj\n                            \n                            \n                                    Static\n                                isCanActivateGuardExist\n                            \n                            \n                                    Static\n                                modifyRouteTable\n                            \n                            \n                                    Static\n                                resetRouterConfig\n                            \n                            \n                                    Static\n                                updateCanActivateGuards\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            pristineRouteConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Routes\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            addNewRoutePath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewRoutePath(router: Router, path: string, component: Type, canActivate: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:41\n                \n            \n\n\n            \n                \n                    Creates a Route object and adds it to the Router table.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nPath name\n\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \nComponent to be attached.\n\n\n                                    \n                                \n                                \n                                    canActivate\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                    \n                                        \nList of guards\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            addOrRemoveCanActivateGuard\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOrRemoveCanActivateGuard(router: Router, path: string, guard: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:92\n                \n            \n\n\n            \n                \n                    Will add canActivate guards to existing route path. IF there are no existing canActivate guards\na new array will be created.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPath name\n\n\n                                    \n                                \n                                \n                                    guard\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nguards array\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            changeRouteComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeRouteComponent(router: Router, path: string, component: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:57\n                \n            \n\n\n            \n                \n                    Modifies the existing path to point to the passed component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPath name\n\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                            Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nComponent to be attached.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            disableCanActivateGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableCanActivateGuards(router: Router, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:81\n                \n            \n\n\n            \n                \n                    Removes all all guards for canActivate.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPath name\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getRoutePathObj\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoutePathObj(router: Router, path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:107\n                \n            \n\n\n            \n                \n                    Returns a Route object from the router table array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \npath name\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Route\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isCanActivateGuardExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isCanActivateGuardExist(router: Router, path: string, guards: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guards\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            modifyRouteTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modifyRouteTable(router: Router, routeTransform: RouteTransform)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:19\n                \n            \n\n\n            \n                \n                    Alters route table by either adding a new route path, change route component or updating canActivate guards.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    routeTransform\n                                    \n                                                RouteTransform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resetRouterConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetRouterConfig(router: Router)\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:140\n                \n            \n\n\n            \n                \n                    Points route config back to existing configuration.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateCanActivateGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCanActivateGuards(router: Router, path: string, guard: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/aop-routing/src/lib/navigation/router-helper.ts:68\n                \n            \n\n\n            \n                \n                    Will update canActivate guards on route path. If an empty array of guards is passed, guards on the route will be disabled.\nif list of guards is passed, they will be added to existing canActivate guards.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter object\n\n\n                                    \n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPath name\n\n\n                                    \n                                \n                                \n                                    guard\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nlist of guards\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import cloneDeep from 'lodash/cloneDeep';\nimport { createErrorObj, logError } from '../shared/utility';\nimport { NavError } from '../model/enum';\nimport { Route, Router, Routes } from '@angular/router';\nimport { RouteTransform } from '../model/models';\nimport { Type } from '@angular/core';\n\n// @dynamic//\nexport class RouteHelper {\n  private static pristineRouteConfig: Routes;\n\n  /**\n   * Alters route table by either adding a new route path, change route component or updating canActivate guards.\n   * @param router - Router object\n   * @param path - Path name\n   * @param component - Component to be attached\n   * @param guards - list of canActivate guards\n   */\n  public static modifyRouteTable(router: Router, routeTransform: RouteTransform): void {\n    this.pristineRouteConfig = cloneDeep(router.config);\n    const pathObj = this.getRoutePathObj(router, routeTransform.path);\n    if (!pathObj) {\n      this.addNewRoutePath(router, routeTransform.path, routeTransform.component, routeTransform.canActivateGuards);\n    } else {\n      if (routeTransform.component) {\n        this.changeRouteComponent(router, routeTransform.path, routeTransform.component);\n      }\n      if (routeTransform.canActivateGuards) {\n        this.updateCanActivateGuards(router, routeTransform.path, routeTransform.canActivateGuards);\n      }\n    }\n  }\n\n  /**\n   * Creates a Route object and adds it to the Router table.\n   * @param router - Router object\n   * @param path - Path name\n   * @param component  - Component to be attached.\n   * @param canActivate - List of guards\n   */\n  public static addNewRoutePath(router: Router, path: string, component: Type, canActivate = []): void {\n    if (component) {\n      const routeInput: Route = { path, component, canActivate };\n      router.config.push(routeInput);\n    } else {\n      logError(createErrorObj(NavError.EXPERIMENTAL_FEATURE_COMPONENT_MISSING));\n      throw NavError.EXPERIMENTAL_FEATURE_COMPONENT_MISSING;\n    }\n  }\n\n  /**\n   * Modifies the existing path to point to the passed component.\n   * @param router - Router object\n   * @param path - Path name\n   * @param component - Component to be attached.\n   */\n  public static changeRouteComponent(router: Router, path: string, component: Type): void {\n    this.getRoutePathObj(router, path).component = component;\n  }\n\n  /**\n   * Will update canActivate guards on route path. If an empty array of guards is passed, guards on the route will be disabled.\n   * if list of guards is passed, they will be added to existing canActivate guards.\n   * @param router - Router object\n   * @param path - Path name\n   * @param guard - list of guards\n   */\n  public static updateCanActivateGuards(router: Router, path: string, guard: any[]): void {\n    if (guard && guard.length > 0) {\n      this.addOrRemoveCanActivateGuard(router, path, guard);\n    } else if (guard.length === 0) {\n      this.disableCanActivateGuards(router, path);\n    }\n  }\n\n  /**\n   * Removes all all guards for canActivate.\n   * @param router - Router object\n   * @param path - Path name\n   */\n  public static disableCanActivateGuards(router: Router, path: string): void {\n    this.getRoutePathObj(router, path).canActivate = [];\n  }\n\n  /**\n   * Will add canActivate guards to existing route path. IF there are no existing canActivate guards\n   * a new array will be created.\n   * @param router - Router object\n   * @param path - Path name\n   * @param guard - guards array\n   */\n  public static addOrRemoveCanActivateGuard(router: Router, path: string, guard: any[]): void {\n    if (!this.getRoutePathObj(router, path).canActivate) {\n      this.getRoutePathObj(router, path).canActivate = guard;\n    } else {\n      const clonedActivatedGuards = this.isCanActivateGuardExist(router, path, guard);\n      const updatedCanActivatedGuards = [...clonedActivatedGuards, ...guard];\n      this.getRoutePathObj(router, path).canActivate = updatedCanActivatedGuards;\n    }\n  }\n\n  /**\n   * Returns a Route object from the router table array.\n   * @param router - Router object\n   * @param path - path name\n   */\n  public static getRoutePathObj(router: Router, path: string): Route {\n    return router.config.find((element) => element.path === path);\n  }\n\n  public static isCanActivateGuardExist(router: Router, path: string, guards: any[]): any[] {\n    const clonedCanActivateGuards: any[] = cloneDeep(this.getRoutePathObj(router, path).canActivate);\n    const removeGuardsIndex: any[] = [];\n    // Check if guards exist\n    for (let element = 0; element  {\n        return x === guards[element];\n      });\n      if (guardIndex !== -1) {\n        removeGuardsIndex.push(guardIndex);\n      }\n    }\n\n    // Trim passed guards array and only leave guard to added\n    for (let element = 0; element \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteTransform.html":{"url":"interfaces/RouteTransform.html","title":"interface - RouteTransform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteTransform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/model/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canActivateGuards\n                                \n                                \n                                            Optional\n                                        component\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canActivateGuards\n                                    \n                                \n                                \n                                    \n                                        canActivateGuards:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                    \n                                \n                                \n                                    \n                                        component:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NavigationExtras } from '@angular/router';\nimport { Type } from '@angular/core';\n\nexport interface RouteTransform {\n  path: string;\n  component?: Type;\n  canActivateGuards?: any[];\n}\n\nexport interface AopNav {\n  routeTransform: RouteTransform;\n  navigationExtra?: NavigationExtras | undefined;\n}\nexport interface AopNavigator {\n  destinationPage?: string | number;\n  navigationExtra?: NavigationExtras | undefined;\n  // tslint:disable-next-line:ban-types\n  preprocess?: Function;\n  param?: any;\n}\n\nexport class AopConfig {\n  expirementNav: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transient.html":{"url":"classes/Transient.html","title":"class - Transient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/aop-routing/src/lib/shared/transient.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                useExperimentalFeatures\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            useExperimentalFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/aop-routing/src/lib/shared/transient.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transient {\n  public static useExperimentalFeatures: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteBack\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteBackAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteNext\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteNextAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteToState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/decorators/nav-decorators.ts\n            \n            function\n            RouteToStateAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/abstract/aop-base-navigation.ts\n            \n            class\n            AopBaseNavigation\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/models.ts\n            \n            class\n            AopConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/models.ts\n            \n            interface\n            AopNav\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/models.ts\n            \n            interface\n            AopNavigator\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/models.ts\n            \n            interface\n            RouteTransform\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/model/nav-aux.ts\n            \n            class\n            NavAux\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/aop-navigation.service.ts\n            \n            injectable\n            AopNavigationService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/aop-proxy-navigation.service.ts\n            \n            injectable\n            AopProxyNavigationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/navigation-helper.ts\n            \n            function\n            createNavObj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/navigation-helper.ts\n            \n            function\n            prepareNavObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/navigation-helper.ts\n            \n            function\n            updateNavObj\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/navigation/router-helper.ts\n            \n            class\n            RouteHelper\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/transient.ts\n            \n            class\n            Transient\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            createErrorObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            isAopNavObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            isProxyNavigationProvided\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            isTypeNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            isTypeString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/lib/shared/utility.ts\n            \n            function\n            logError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/mock/test-data.ts\n            \n            class\n            BadProxy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/mock/test-data.ts\n            \n            class\n            GoodProxy\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/mock/test-data.ts\n            \n            class\n            MockDecoratorClass\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/mock/test-data.ts\n            \n            function\n            mockFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/mock/test-data.ts\n            \n            function\n            mockPartialRouter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/aop-routing/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.1.0\n        \n            @angular/common : ~8.1.0\n        \n            @angular/compiler : ~8.1.0\n        \n            @angular/core : ~8.1.0\n        \n            @angular/forms : ~8.1.0\n        \n            @angular/platform-browser : ~8.1.0\n        \n            @angular/platform-browser-dynamic : ~8.1.0\n        \n            @angular/router : ~8.1.0\n        \n            core-js : ^2.5.4\n        \n            lodash.clonedeep : ^4.5.0\n        \n            node-sass : ^4.13.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NavError   (projects/.../enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/aop-routing/src/lib/model/enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NavError\n                    \n                \n                        \n                            \n                                 OBSERVABLE_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : To use route async, method must return an observable\n                            \n                        \n                        \n                            \n                                 OBSERVABLE_STREAM\n                            \n                        \n                        \n                            \n                                Value : Encountered error in observable stream\n                            \n                        \n                        \n                            \n                                 UPDATING_NAVAUX\n                            \n                        \n                        \n                            \n                                Value : Error updating NavAux instance\n                            \n                        \n                        \n                            \n                                 PREPROCRESS_FUNC\n                            \n                        \n                        \n                            \n                                Value : An error occurred executing function \n                            \n                        \n                        \n                            \n                                 ROUTING\n                            \n                        \n                        \n                            \n                                Value : Could not route to \n                            \n                        \n                        \n                            \n                                 LOCATION_BACK\n                            \n                        \n                        \n                            \n                                Value : Failed to popState navigate\n                            \n                        \n                        \n                            \n                                 STATE_HISTORY\n                            \n                        \n                        \n                            \n                                Value : Failed to load specific page from session history\n                            \n                        \n                        \n                            \n                                 EXPERIMENTAL_FEATURE_ROUTE_TRANSFORM\n                            \n                        \n                        \n                            \n                                Value : Cannot use RouteTransform object with experimental flag turned off\n                            \n                        \n                        \n                            \n                                 EXPERIMENTAL_FEATURE_COMPONENT_MISSING\n                            \n                        \n                        \n                            \n                                Value : No component provided to create a new route path object\n                            \n                        \n                        \n                            \n                                 EXPIREMENTAL_FEATURE_ROUTE_TRANSFORM\n                            \n                        \n                        \n                            \n                                Value : EXPIREMENTAL_FEATURE_ROUTE_TRANSFORM\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createErrorObj   (projects/.../utility.ts)\n                        \n                        \n                            createNavObj   (projects/.../navigation-helper.ts)\n                        \n                        \n                            isAopNavObj   (projects/.../utility.ts)\n                        \n                        \n                            isProxyNavigationProvided   (projects/.../utility.ts)\n                        \n                        \n                            isTypeNumber   (projects/.../utility.ts)\n                        \n                        \n                            isTypeString   (projects/.../utility.ts)\n                        \n                        \n                            logError   (projects/.../utility.ts)\n                        \n                        \n                            mockFunction   (projects/.../test-data.ts)\n                        \n                        \n                            mockPartialRouter   (projects/.../test-data.ts)\n                        \n                        \n                            prepareNavObject   (projects/.../navigation-helper.ts)\n                        \n                        \n                            RouteBack   (projects/.../nav-decorators.ts)\n                        \n                        \n                            RouteBackAsync   (projects/.../nav-decorators.ts)\n                        \n                        \n                            RouteNext   (projects/.../nav-decorators.ts)\n                        \n                        \n                            RouteNextAsync   (projects/.../nav-decorators.ts)\n                        \n                        \n                            RouteToState   (projects/.../nav-decorators.ts)\n                        \n                        \n                            RouteToStateAsync   (projects/.../nav-decorators.ts)\n                        \n                        \n                            updateNavObj   (projects/.../navigation-helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/aop-routing/src/lib/shared/utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorObj\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorObj(errorMsg)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Error\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAopNavObj\n                        \n                        \n                    \n                \n            \n            \n                \nisAopNavObj(navObj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    navObj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isProxyNavigationProvided\n                        \n                        \n                    \n                \n            \n            \n                \nisProxyNavigationProvided(proxyNavRef)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    proxyNavRef\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeNumber(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeString\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeString(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \nlogError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/aop-routing/src/lib/navigation/navigation-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createNavObj\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNavObj(page, navigationExtras)\n                \n            \n\n\n\n\n            \n                \n                    Creates an instance of the NavAux class by using the passed parameters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDestination page\n\n\n                                    \n                                \n                                \n                                    navigationExtras\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRouter extra properties\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NavAux\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareNavObject\n                        \n                        \n                    \n                \n            \n            \n                \nprepareNavObject(result: any, page?, navigationExtras?)\n                \n            \n\n\n\n\n            \n                \n                    Calls the createNavObj or updateNavObj to create an instance of the NavAux class with the passed in parameters.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nResult of executed function\n\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nDestination page\n\n\n                                    \n                                \n                                \n                                    navigationExtras\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nRouter navigation extra properties\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateNavObj\n                        \n                        \n                    \n                \n            \n            \n                \nupdateNavObj(oldNavObj, newNavObj)\n                \n            \n\n\n\n\n            \n                \n                    Will updated the existing instance of the NavAux to a new NavAux instance.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    oldNavObj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nExsting instance of NavAux class\n\n\n                                    \n                                \n                                \n                                    newNavObj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew Instance of NavAux class\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NavAux\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/aop-routing/src/mock/test-data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mockFunction\n                        \n                        \n                    \n                \n            \n            \n                \nmockFunction()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mockPartialRouter\n                        \n                        \n                    \n                \n            \n            \n                \nmockPartialRouter(url)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/aop-routing/src/lib/decorators/nav-decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            RouteBack\n                        \n                        \n                    \n                \n            \n            \n                \nRouteBack()\n                \n            \n\n\n\n\n            \n                \n                    Executes the original wrapped method and uses the return value to create an instance of the NavAux class. Then proceeds\nto navigate backwards using popState.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            RouteBackAsync\n                        \n                        \n                    \n                \n            \n            \n                \nRouteBackAsync()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            RouteNext\n                        \n                        \n                    \n                \n            \n            \n                \nRouteNext(page?, navigationExtras?)\n                \n            \n\n\n\n\n            \n                \n                    Executes the original wrapped method and uses the return value along with the passed in arguments of the decorator\nto create an instance of the NavAux class, then proceeds to navgigate to destination page.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nDestination page\n\n\n                                    \n                                \n                                \n                                    navigationExtras\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nExtra properties for the Router\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            RouteNextAsync\n                        \n                        \n                    \n                \n            \n            \n                \nRouteNextAsync()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            RouteToState\n                        \n                        \n                    \n                \n            \n            \n                \nRouteToState(state?)\n                \n            \n\n\n\n\n            \n                \n                    Executes the original wrapped method and uses the return value along with the passed in arguments of the decorator\nto create an instance of the NavAux class, then proceeds to traverse through the history to the specified state.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \npage in the state to navigate to\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            RouteToStateAsync\n                        \n                        \n                    \n                \n            \n            \n                \nRouteToStateAsync()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAop-Routing\nProvides the capability to perform Imperative and Popstate navigation operations in Angular through the ease of typescript decorators, without the need to import the Angular Router object\nList of features include\n\nImperative navigation using decorators\nPopState navigation using decorators\nCustom navigation logic to override default navigation logic\nDynamically add new path to routing table at runtime\nDynamically change the component of a path at runtime\nDynamically add/remove CanActivate guards at runtime \n\nInstallation\n- Note: This library requires Angular version 8.1 or higherAop-Routing runs on NodeJs and is available as an NPM package\nnpm install aop-routingUsage\n\nAdd AopRoutingModule to the top level/root module import array.\nimports: [\n...\n AopRoutingModule\n]\nInject AopNavigationService into your top level/root module constructor.\nexport class AppModule {\nconstructor(private navigationService: AopNavigationService) {}\n}Features\nAop-Routing has a lot of features pertaining to navigation in an Angular app.\nDecorator Navigation\nRouteNext\nThe RouteNext decorator can be passed an optional string, and it will automatically perform an imperative routing to the next page at the end of the targeted method's execution.\nThe below example will automatically route to page1 at the end of the testMethod execution.\n@RouteNext('page1')\npublic testMethod(): void {\n...some logic...\n}Should the need be required to pass a dynamic value to RouteNext, this can be done by allowing the targeted function to return a string or an AopNavigator Object.\n\nBelow example will use the returned string value of the testMethod to route to the page\n@RouteNext()\npublic testMethod(): string {\n...some logic...\nreturn 'page1'\n}\nBelow example will use the returned AopNavigator object of the test method to perform routing.\n@RouteNext()\npublic testMethod(): Observable {\n...some logic...\nconst obj: AopNavigator = {\n  destinationPage: 'Test2',\n};\nreturn obj;\n}\n\nRouteNextAsync\nThe RouteNextAsync decorator can be used on a function which performs rxjs aysnchronous operations. The function should return an observable. The RouteNextAsync will subscribe to the passed observable and automatically perform imperative navigation.\nThe method should return an Observable or AopNavigator object which the decorator will use to perform imperative navigation\n\nBelow example will make the decorator subscribe to the Observable value returned from the targeted method and use that value to perform\nimperative routing.\n@RouteNextAsync()\npublic testMethod(): Observable {\n...some logic...\nreturn of(1, 2, 3).pipe(\nswitchMap(x => {\n  return of('page1');\n})\n);\n}\n\n\nBelow example will make the decorator subscribe to the AopNavigator object returned from the targeted method and use the destinationPage property value to perform\nimperative routing.\n@RouteNextAsync()\npublic testMethod(): Observable {\n...some logic...\n\nconst obj: AopNavigator = {\ndestinationPage: 'Test2',\n};\n\nreturn of(1, 2, 3).pipe(\nswitchMap(x => {\n return of(obj);\n})\n);\n}NavigationExtras for RouteNext and RouteNextAsync\nAn Angular NavigationExtras object can be passed to RouteNext and RouteNextAsync to allow extra options to modify the Router navigation strategy.\n\n\nThe below example will route to page1 and set the Router skipLocationChange to true\n@RouteNext('page1',  {skipLocationChange: true})\npublic testMethod(): void {\n ...some logic...\n}RouteBack\n RouteBack decorator when used on a targeted method, will automatically perform popstate navigation back to the previous page after the end of the targeted method execution.\n @RouteBack()\n public testMethod() {\n  ...some logic...\n }RouteBackAsync\nThe RouteBackAsync decorator can be used on a function which performs rxjs aysnchronous operations. The function should return an observable. The RouteBackAsync will subscribe to the passed observable and automatically perform popstate navigation to the previous page.\nBelow example will popstate navigate back to previous page after the asynchronous operation inside the method is complete.\n@RouteBackAsync()\npublic testMethod() {\n return of(...some async operations).pipe(\n ...rxjs operators...)\n}RouteToState\nRouteToState decorator when used on a targeted method, will automatically perform popste navigation to the destination page in the history state. If a negative number is provided, RouteToState will popstate naivage backwards equivalent to the passed integer, likewise it will popstate navigate forwards for a positive integer.\n\nBelow example will traverse 2 states backwards of the browser history state\n@RouteToState(-2)\npublic testMethod() {\n...some logic...\n}\nBelow example will traverse 2 states forward of the browser history state\n@RouteToState(2)\npublic testMethod() {\n...some logic...\n}\n\nRouteToStateAsync\nThe RouteToStateAsync decorator can be used on a function which performs rxjs aysnchronous operations. The function should return an observable. The RouteToStateAsync will subscribe to the passed observable and automatically perform popstate navigation traversion of the history state.\n\nBelow example will subscribe to the targeted method and use the returned value to traverse -2 states backwards of the browser history state after end of targeted method.\n\n@RouteToStateAsync()\npublic testMethod(): Observable {\n   ...some logic...\n   return of(1, 2, 3).pipe(\n    switchMap(x => {\n      return of(-2);\n    })\n  );\n}\nBelow example will make the decorator subscribe to the AopNavigator object returned from the targeted method and use the destinationPage property value to perform\npopstate navigation traversal of the browser history state.\n@RouteToStateAsync()\npublic testMethod(): Observable {\n...some logic...\n\n const obj: AopNavigator = {\n  destinationPage: -2',\n};\n\nreturn of(1, 2, 3).pipe(\n switchMap(x => {\n   return of(obj);\n })\n);\n}\n\n\nAopNavigator Interface capabilities\nAopNavigator interface contains the following properties that can be used to enhance the decorator functionalities.\n\ndestinationPage - This property can be passed a string or numeric value that can be used for the RouteNext, RouteNextAsync, RouteToState and RouteToStateAsync decorators to perform navigation.\n\nnavigationExtra - This property takes an Angular NavigationExtras object to allow extra options to modify the Router navigation strategy for RouteNext and RouteNextAsync decorator.\n\npreprocess - This property takes a reference function. This function will be executed prior to any navigations performed by the decorators.\n\nparam - This property will take a value of any type that can be used as parameter(s) for the passed function in the preprocess property.\n\n\n\nCustom user defined navigation logic\nCustom logic can be passed to the AopRouting library to override the default navigation logic of the decorators.\n\nCreate a class that extends the AopBaseNavigation abstract class.\nexport class SampleClass extends AopBaseNavigation {}\nImplement the required abstract methods of the AopBaseNavigation abstract class.\n\n\n\ngoToNextPage()\ngoToPreviousPage()\ngoToState()\n\nexport class SampleClass extends AopBaseNavigation {\n public goToNextPage(...) {\n  ...custom logic...\n}\n\n public goToPreviousPage(...) {\n  ...custom logic...\n}\n\n public goToState(...) {\n  ...custom logic...\n}\n\nIn the top level/root module add the AopProxyNavigationService to the providers array and set the useClass to the newly created class@NgModule({\nimports: [\n ...\n AopRoutingModule\n],\nproviders: [{provide: AopProxyNavigationService, useClass: SampleClass}],\n})\nThe above steps will override the default decorator navigation logic, which means the decorators will now use the custom methods of the newly created class SampleClass\n\n\nExperiemental Features\nAopRouting can dynamically modify the routing table during runtime of an Angular application.\n- Note the below features are experimental and should be used with cautionTo enable the experimental features of the AopRouting library, pass an object with experimentalNav property set to true to the AopRoutingModule forRoot method to the top level/root module:\n@NgModule({\n  ...\n  imports: [\n    ...\n    AopRoutingModule.forRoot({expirementNav: true})\n  ],\n  ...\n})The below Routing table will be used to demonstrate the features and examples:\nconst routes: Routes = [\n  {path: 'page1', component: Page1Component},\n  {path: 'page2', component: Page2Component }\n];Adding new Path to the Routing Table at runtime.\nA new Path can be dynamically created and to the Routing table and also navigated to at runtime . Suppose we want to add page3 that should route to Page3Component\n\nCreate a routeTransform object and set the path and *component property:\nconst routeTransform: RouteTransform = {\n path: 'page3',\n component: Page3Component\n};\nIn the RouteNext or RouteNextAsync deocrator of the targeted function, return an AopNav object with the routeTransform property set.\n@RouteNext()\npublic testMethod() {\nconst routeTransform: RouteTransform = {\n path: 'page3',\n component: Page3Component\n};\nreturn {routeTransform}\n}\n\nChanging component of a Path at runtime\nA component that has been statically set to a path can be changed and navigated to at runtime. Suppose we want to change page1 to route to Page3Component instead:\n\nCreate a routeTransform object and set the path and *component property:\nconst routeTransform: RouteTransform = {\n path: 'page1',\n component: Page3Component\n};\nIn the RouteNext or RouteNextAsync deocrator of the targeted function, return an AopNav object with the routeTransform property set:\n@RouteNext()\npublic testMethod() {\nconst routeTransform: RouteTransform = {\n path: 'page1',\n component: Page3Component\n};\nreturn {routeTransform}\n}Add CanActivate guard(s) at runtime\nCanActivate guards can be added to a path at runtime. Suppose we want to add a guard page1 path\n\nCreate a routeTransform object and set the path1 and canActivateGuards property by providing the name(s) of CanActivate guard(s) to be added:\nconst routeTransform: RouteTransform = {\n path: 'page1',\n canActivateGuards: [guard1, guard2]\n};\nIn the RouteNext or RouteNextAsync deocrator of the targeted function, return an AopNav object with the routeTransform property set:\n@RouteNext()\npublic testMethod() {\nconst routeTransform: RouteTransform = {\n path: 'page1',\n canActivateGuards: [guard1, guard2]\n};\nreturn {routeTransform}\n}\n\nRemoving guard(s) from a path\nTo remove CanActivate guards from a path at runtime, it's the same steps as adding guards. If the guards provided exist in the routing table, they will be removed.\nRemoving all CanActivate guards associated to a path.\nTo remove all CanActivate guards associated to a path is the same steps as adding a guard. Instead the canActivateGuards property should be set to an empty array.\n@RouteNext()\npublic testMethod() {\n  const routeTransform: RouteTransform = {\n    path: 'page1',\n    canActivateGuards: []\n };\n  return {routeTransform}\n}- Changes made to the Routing table are not persistent. They are reverted back upon completion of navigation\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AopRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (projects/.../test.ts)\n                        \n                        \n                            require   (projects/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/aop-routing/src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
